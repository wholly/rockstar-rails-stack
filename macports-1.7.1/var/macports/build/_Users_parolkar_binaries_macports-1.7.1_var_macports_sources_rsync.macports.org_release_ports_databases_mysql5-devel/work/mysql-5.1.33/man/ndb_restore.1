.\"     Title: \fBndb_restore\fR
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.70.1 <http://docbook.sf.net/>
.\"      Date: 03/13/2009
.\"    Manual: MySQL Database System
.\"    Source: MySQL 5.1
.\"
.TH "\fBNDB_RESTORE\fR" "1" "03/13/2009" "MySQL 5.1" "MySQL Database System"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
ndb_restore \- restore a MySQL Cluster backup
.SH "SYNOPSIS"
.HP 20
\fBndb_restore \fR\fB\fIoptions\fR\fR
.SH "DESCRIPTION"
.PP
The cluster restoration program is implemented as a separate command\-line utility
\fBndb_restore\fR, which can normally be found in the MySQL
\fIbin\fR
directory. This program reads the files created as a result of the backup and inserts the stored information into the database.
.PP
\fBndb_restore\fR
must be executed once for each of the backup files that were created by the
START BACKUP
command used to create the backup (see
Section\ 17.7.3.2, \(lqUsing The MySQL Cluster Management Client to Create a Backup\(rq). This is equal to the number of data nodes in the cluster at the time that the backup was created.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
\fBNote\fR
.PP
Before using
\fBndb_restore\fR, it is recommended that the cluster be running in single user mode, unless you are restoring multiple data nodes in parallel. See
Section\ 17.7.6, \(lqMySQL Cluster Single User Mode\(rq, for more information about single user mode.
.PP
Typical options for this utility are shown here:
.sp
.RS 3n
.nf
ndb_restore [\-c \fIconnectstring\fR] \-n
\fInode_id\fR [\-s] [\-m] \-b \fIbackup_id\fR \-r \-\-backup_path=\fI/path/to/backup/files\fR [\-e]
.fi
.RE
.PP
The
\fB\-c\fR
option is used to specify a connectstring which tells
ndb_restore
where to locate the cluster management server. (See
Section\ 17.3.4.3, \(lqThe MySQL Cluster Connectstring\(rq, for information on connectstrings.) If this option is not used, then
\fBndb_restore\fR
attempts to connect to a management server on
localhost:1186. This utility acts as a cluster API node, and so requires a free connection
\(lqslot\(rq
to connect to the cluster management server. This means that there must be at least one
[api]
or
[mysqld]
section that can be used by it in the cluster
\fIconfig.ini\fR
file. It is a good idea to keep at least one empty
[api]
or
[mysqld]
section in
\fIconfig.ini\fR
that is not being used for a MySQL server or other application for this reason (see
Section\ 17.3.4.7, \(lqDefining SQL and Other API Nodes in a MySQL Cluster\(rq).
.PP
You can verify that
\fBndb_restore\fR
is connected to the cluster by using the
\fBSHOW\fR
command in the
\fBndb_mgm\fR
management client. You can also accomplish this from a system shell, as shown here:
.sp
.RS 3n
.nf
shell> \fBndb_mgm \-e "SHOW"\fR
.fi
.RE
.PP
\fB\-n\fR
is used to specify the node ID of the data node on which the backups were taken.
.PP
The first time you run the
\fBndb_restore\fR
restoration program, you also need to restore the metadata. In other words, you must re\-create the database tables \(em this can be done by running it with the
\fB\-m\fR
option. Note that the cluster should have an empty database when starting to restore a backup. (In other words, you should start
\fBndbd\fR
with
\fB\-\-initial\fR
prior to performing the restore. You should also remove manually any Disk Data files present in the data node's
DataDir.)
.PP
It is possible to restore data without restoring table metadata. Prior to MySQL 5.1.17,
\fBndb_restore\fR
did not perform any checks of table schemas; if a table was altered between the time the backup was taken and when
\fBndb_restore\fR
was run,
\fBndb_restore\fR
would still attempt to restore the data to the altered table.
.PP
Beginning with MySQL 5.1.17, the default behavior is for
\fBndb_restore\fR
to fail with an error if table data do not match the table schema; this can be overridden using the
\fB\-\-skip\-table\-check\fR
or
\fB\-s\fR
option. Prior to MySQL 5.1.21, if this option is used, then
\fBndb_restore\fR
attempts to fit data into the existing table schema, but the result of restoring a backup to a table schema that does not match the original is unspecified.
.PP
Beginning with MySQL Cluster NDB 6.3.8,
\fBndb_restore\fR
supports limited
attribute promotion
in much the same way that it is supported by MySQL replication; that is, data backed up from a column of a given type can generally be restored to a column using a
\(lqlarger, similar\(rq
type. For example, data from a
CHAR(20)
column can be restored to a column declared as
VARCHAR(20),
VARCHAR(30), or
CHAR(30); data from a
MEDIUMINT
column can be restored to a column of type
INT
or
BIGINT. See
Section\ 16.3.1.4.2, \(lqReplication of Columns Having Different Data Types\(rq, for a table of type conversions currently supported by attribute promotion.
.PP
Attribute promotion by
\fBndb_restore\fR
must be enabled explicitly, as follows:
.TP 3n
1.
Prepare the table to which the backup is to be restored.
\fBndb_restore\fR
cannot be used to re\-create the table with a different definition from the original; this means that you must either create the table manually, or alter the columns which you wish to promote using
ALTER TABLE
after restoring the table metadata but before restoring the data.
.TP 3n
2.
Invoke
\fBndb_restore\fR
with the
\fB\-\-promote\-attributes\fR
option (short form
\fB\-A\fR) when restoring the table data. Attribute promotion does not occur if this option is not used; instead, the restore operation fails with an error.
.sp
.RE
.PP
In addition to
\fB\-\-promote\-attributes\fR, a
\fB\-\-preserve\-trailing\-spaces\fR
option is also available for use with
\fBndb_restore\fR
beginning with MySQL Cluster NDB 6.3.8. This option (short form
\fB\-R\fR) causes trailing spaces to be preserved when promoting a
CHAR
column to
VARCHAR
or a
BINARY
column to
VARBINARY. Otherwise, any trailing spaces are dropped from column values when they are inserted into the new columns.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
\fBNote\fR
.PP
Although you can promote
CHAR
columns to
VARCHAR
and
BINARY
columns to
VARBINARY, you cannot promote
VARCHAR
columns to
CHAR
or
VARBINARY
columns to
BINARY.
.PP
The
\fB\-b\fR
option is used to specify the ID or sequence number of the backup, and is the same number shown by the management client in the
Backup \fIbackup_id\fR completed
message displayed upon completion of a backup. (See
Section\ 17.7.3.2, \(lqUsing The MySQL Cluster Management Client to Create a Backup\(rq.)
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
\fBImportant\fR
.PP
When restoring cluster backups, you must be sure to restore all data nodes from backups having the same backup ID. Using files from different backups will at best result in restoring the cluster to an inconsistent state, and may fail altogether.
.PP
\fB\-e\fR
adds (or restores) epoch information to the cluster replication status table. This is useful for starting replication on a MySQL Cluster replication slave. When this option is used, the row in the
mysql.ndb_apply_status
having
0
in the
id
column is updated if it already exists; such a row is inserted if it does not already exist. (See
Section\ 17.10.9, \(lqMySQL Cluster Backups With Replication\(rq.)
.PP
The path to the backup directory is required; this is supplied to
\fBndb_restore\fR
using the
\fB\-\-backup_path\fR
option, and must include the subdirectory corresponding to the ID backup of the backup to be restored. For example, if the data node's
DataDir
is
\fI/var/lib/mysql\-cluster\fR, then the backup directory is
\fI/var/lib/mysql\-cluster/BACKUP\fR, and the backup files for the backup with the ID 3 can be found in
\fI/var/lib/mysql\-cluster/BACKUP/BACKUP\-3\fR. The path may be absolute or relative to the directory in which the
\fBndb_restore\fR
executable is located.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
\fBNote\fR
.PP
Previous to MySQL 5.1.17 and MySQL Cluster NDB 6.1.5, the path to the backup directory was specified as shown here, with
\fBbackup_path=\fR
being optional:
.sp
.RS 3n
.nf
[backup_path=]\fI/path/to/backup/files\fR
.fi
.RE
.PP
Beginning with MySQL 5.1.17 and MySQL Cluster NDB 6.1.5, this syntax changed to
\fB\-\-backup_path=\fR\fB\fI/path/to/backup/files\fR\fR, to conform more closely with options used by other MySQL programs;
\fB\-\-backup_id\fR
is required, and there is no short form for this option.
.PP
It is possible to restore a backup to a database with a different configuration than it was created from. For example, suppose that a backup with backup ID
12, created in a cluster with two database nodes having the node IDs
2
and
3, is to be restored to a cluster with four nodes. Then
\fBndb_restore\fR
must be run twice \(em once for each database node in the cluster where the backup was taken. However,
\fBndb_restore\fR
cannot always restore backups made from a cluster running one version of MySQL to a cluster running a different MySQL version. See
Section\ 17.5.2, \(lqMySQL Cluster 5.1 and MySQL Cluster NDB 6.x Upgrade and Downgrade Compatibility\(rq, for more information.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
\fBImportant\fR
.PP
It is not possible to restore a backup made from a newer version of MySQL Cluster using an older version of
\fBndb_restore\fR. You can restore a backup made from a newer version of MySQL to an older cluster, but you must use a copy of
\fBndb_restore\fR
from the newer MySQL Cluster version to do so.
.PP
For example, to restore a cluster backup taken from a cluster running MySQL Cluster NDB 6.2.15 to a cluster running MySQL 5.1.20, you must use a copy of
\fBndb_restore\fR
from the MySQL Cluster NDB 6.2.15 distribution.
.PP
For more rapid restoration, the data may be restored in parallel, provided that there is a sufficient number of cluster connections available. That is, when restoring to multiple nodes in parallel, you must have an
[api]
or
[mysqld]
section in the cluster
\fIconfig.ini\fR
file available for each concurrent
\fBndb_restore\fR
process. However, the data files must always be applied before the logs.
.PP
Formerly, when using
\fBndb_restore\fR
to restore a backup made from a MySQL 5.0 cluster to a 5.1 cluster,
VARCHAR
columns were not resized and were recreated using the 5.0 fixed format. Beginning with MySQL 5.1.19,
ndb_restore
recreates such
VARCHAR
columns using MySQL Cluster 5.1's variable\-width format. Also beginning with MySQL 5.1.19, this behavior can be overridden using the
\fB\-\-no\-upgrade\fR
option (short form:
\fB\-u\fR) when running
\fBndb_restore\fR.
.PP
Most of the options available for this program are shown in the following table:
.TS
allbox tab(:);
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l.
T{
\fBLong Form\fR
T}:T{
\fBShort Form\fR
T}:T{
\fBDescription\fR
T}:T{
\fBDefault Value\fR
T}
T{
\fB\-\-exclude\-tables=\fR\fB\fItbl_list\fR\fR
T}:T{
\fINone\fR
T}:T{
Do not restore the indicated table or tables; each table must be
                    specified using
                    \fIdatabase\fR.\fItable\fR
                    format(added in MySQL Cluster NDB 6.3.22 and 6.4.3)
T}:T{
[N/A]
T}
T{
\fB\-\-help\fR or \fB\-\-usage\fR
T}:T{
\fB\-?\fR
T}:T{
Display help message with available options and current values, then
                    exit
T}:T{
[N/A]
T}
T{
\fB\-\-include\-databases=\fR\fB\fIdb_list\fR\fR
T}:T{
\fINone\fR
T}:T{
Restore only the indicated database or databases (added in MySQL Cluster
                    NDB 6.3.22 and 6.4.3)
T}:T{
[N/A]
T}
T{
\fB\-\-include\-tables=\fR\fB\fItbl_list\fR\fR
T}:T{
\fINone\fR
T}:T{
Restore only the indicated table or tables; each table must be specified
                    using
                    \fIdatabase\fR.\fItable\fR
                    format(added in MySQL Cluster NDB 6.3.22 and 6.4.3)
T}:T{
[N/A]
T}
T{
\fB\-\-ndb\-mgmd\-host\fR
T}:T{
\fINone\fR
T}:T{
Set the host and port in
                    \fIhost\fR[:\fIport\fR]
                    format for the management server to connect to; this
                    is the same as \fB\-\-connect\fR,
                    \fB\-\-connectstring\fR, or
                    \fB\-\-ndb\-connectstring\fR, but without a
                    way to specify the nodeid
T}:T{
\fINone\fR
T}
T{
\fB\-\-ndb\-nodegroup\-map\fR
T}:T{
\fB\-z\fR
T}:T{
Specifies a nodegroup map \(em \fISyntax\fR: list of
                    (\fIsource_nodegroup\fR,
                    \fIdestination_nodegroup\fR)
T}:T{
\fINone\fR
T}
T{
\fB\-\-ndb\-nodeid\fR
T}:T{
\fINone\fR
T}:T{
Specify a node ID for the \fBndb_restore\fR process
T}:T{
0
T}
T{
\fB\-\-ndb\-optimized\-node\-selection\fR
T}:T{
\fINone\fR
T}:T{
Optimize selection of nodes for transactions
T}:T{
TRUE
T}
T{
\fB\-\-ndb\-shm\fR
T}:T{
\fINone\fR
T}:T{
Use shared memory connections when available
T}:T{
FALSE
T}
T{
\fB\-\-no\-binlog\fR
T}:T{
\fINone\fR
T}:T{
Do not write anything to \fBmysqld\fR binary logs (added in
                    MySQL Cluster NDB 6.2.16 and 6.3.16)
T}:T{
FALSE (in other words, write to binary logs unless
                    this option is used)
T}
T{
\fB\-\-backup\-id\fR
T}:T{
\fB\-b\fR
T}:T{
Backup sequence ID
T}:T{
\fINone\fR
T}
T{
\fB\-\-no\-restore\-disk\-objects\fR
T}:T{
\fB\-d\fR
T}:T{
Do not restore Disk Data objects such as tablespaces and log file groups
T}:T{
FALSE (in other words, restore Disk Data objects
                    unless this option is used)
T}
T{
\fB\-\-no\-upgrade\fR
T}:T{
\fB\-u\fR
T}:T{
Do not re\-create VARSIZE columns from a MySQL 5.0
                    Cluster backup as variable\-width columns (added in
                    MySQL 5.1.19)
T}:T{
FALSE (in other words, re\-create
                    VARSIZE columns from a MySQL 5.0
                    Cluster backup as variable\-width columns unless this
                    option is used)
T}
T{
\fB\-\-nodeid\fR
T}:T{
\fB\-n\fR
T}:T{
Use backup files from node with the specified ID
T}:T{
0
T}
T{
\fB\-\-parallelism\fR
T}:T{
\fB\-p\fR
T}:T{
Set from 1 to 1024 parallel transactions to be used during the
                    restoration process
T}:T{
128
T}
T{
\fB\-\-print\fR
T}:T{
\fINone\fR
T}:T{
Print metadata, data, and log to stdout
T}:T{
FALSE
T}
T{
\fB\-\-print_data\fR
T}:T{
\fINone\fR
T}:T{
Print data to stdout
T}:T{
FALSE
T}
T{
\fB\-\-print_log\fR
T}:T{
\fINone\fR
T}:T{
Print log to stdout
T}:T{
FALSE
T}
T{
\fB\-\-print_meta\fR
T}:T{
\fINone\fR
T}:T{
Print metadata to stdout
T}:T{
FALSE
T}
T{
\fB\-\-restore_data\fR
T}:T{
\fB\-r\fR
T}:T{
Restore data and logs
T}:T{
FALSE
T}
T{
\fB\-\-restore_epoch\fR
T}:T{
\fB\-e\fR
T}:T{
Restore epoch data into the status table; the row in the
                    cluster.apply_status having the
                    id 0 is inserted or updated as
                    appropriate \(em this is convenient when starting
                    up replication on a MySQL Cluster replication slave
T}:T{
FALSE
T}
T{
\fB\-\-backup_path\fR (added in MySQL 5.1.17 and MySQL Cluster
                    NDB 6.1.5; previously this was
                    \fBbackup_path\fR \(em see Note in
                    text)
T}:T{
\fINone\fR
T}:T{
Path to backup files
T}:T{
\fINone\fR
T}
T{
\fB\-\-restore_meta\fR
T}:T{
\fB\-m\fR
T}:T{
Restore table metadata
T}:T{
FALSE
T}
T{
\fB\-\-skip\-table\-check\fR
T}:T{
\fB\-s\fR
T}:T{
Do not check table schemas (Added in MySQL 5.1.17)
T}:T{
FALSE
T}
T{
\fB\-\-version\fR
T}:T{
\fB\-V\fR
T}:T{
Output version information and exit
T}:T{
[N/A]
T}
T{
\fB\-\-character\-sets\-dir\fR
T}:T{
\fINone\fR
T}:T{
Specify the directory where character set information can be found
T}:T{
\fINone\fR
T}
T{
\fB\-\-connect\fR, \fB\-\-connectstring\fR, or
                    \fB\-\-ndb\-connectstring\fR
T}:T{
\fB\-c\fR or \fB\-C\fR
T}:T{
Set the connectstring in
                    [nodeid=\fInode_id;][host=]\fR\fIhost\fR[:\fIport\fR]
                    format
T}:T{
localhost:1186
T}
T{
\fB\-\-core\-file\fR
T}:T{
\fINone\fR
T}:T{
Write a core file in the event of an error
T}:T{
TRUE
T}
T{
\fB\-\-debug\fR
T}:T{
\fB\-#\fR
T}:T{
Output debug log
T}:T{
d:t:O,\fI/tmp/ndb_restore.trace\fR
T}
T{
\fB\-\-dont_ignore_systab_0\fR
T}:T{
\fB\-f\fR
T}:T{
Do not ignore system table during restore \(em
                    \fIEXPERIMENTAL; not for production
                    use\fR
T}:T{
FALSE
T}
T{
\fB\-\-exclude\-databases=\fR\fB\fIdb_list\fR\fR
T}:T{
\fINone\fR
T}:T{
Do not restore the indicated database or databases (added in MySQL
                    Cluster NDB 6.3.22 and 6.4.3)
T}:T{
[N/A]
T}
.TE
.sp
.PP
Beginning with MySQL 5.1.18, several additional options are available for use with the
\fB\-\-print_data\fR
option in generating data dumps, either to
stdout, or to a file. These are similar to some of the options used with
\fBmysqldump\fR, and are shown in the following table:
.TS allbox tab(:); l l l l l l l l l l l l l l l l l l l l l l l l l l l l l l l l. T{ \fBLong Form\fR T}:T{ \fBShort Form\fR T}:T{ \fBDescription\fR T}:T{ \fBDefault Value\fR T} T{ \fB\-\-tab\fR T}:T{ \fB\-T\fR T}:T{ Creates dumpfiles, one per table, each named \fI\fItbl_name\fR\fR\fI.txt\fR. Takes as its argument the path to the directory where the files should be saved (required; use . for the current directory). T}:T{ \fINone\fR T} T{ \fB\-\-fields\-enclosed\-by\fR T}:T{ \fINone\fR T}:T{ String used to enclose all column values T}:T{ \fINone\fR T} T{ \fB\-\-fields\-optionally\-enclosed\-by\fR T}:T{ \fINone\fR T}:T{ String used to enclose column values containing character data (such as CHAR, VARCHAR, BINARY, TEXT, or ENUM) T}:T{ \fINone\fR T} T{ \fB\-\-fields\-terminated\-by\fR T}:T{ \fINone\fR T}:T{ String used to separate column values T}:T{ \\t (tab character) T} T{ \fB\-\-hex\fR T}:T{ \fINone\fR T}:T{ Use hex format for binary values T}:T{ [N/A] T} T{ \fB\-\-lines\-terminated\-by\fR T}:T{ \fINone\fR T}:T{ String used to terminate each line T}:T{ \\n (linefeed character) T} T{ \fB\-\-append\fR T}:T{ \fINone\fR T}:T{ When used with \fB\-\-tab\fR, causes the data to be appended to existing files of the same name T}:T{ [N/A] T} .TE .sp
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
\fBNote\fR
.PP
If a table has no explicit primary key, then the output generated when using the
\fB\-\-print\fR
includes the table's hidden primary key.
.PP
Beginning with MySQL 5.1.18, it is possible to restore selected databases, or to restore selected tables from a given database using the syntax shown here:
.sp
.RS 3n
.nf
ndb_restore \fIother_options\fR \fIdb_name_1\fR [\fIdb_name_2\fR[, \fIdb_name_3\fR][, ...] | \fItbl_name_1\fR[, \fItbl_name_2\fR][, ...]]
.fi
.RE
.sp
In other words, you can specify either of the following to be restored:
.TP 3n
\(bu
All tables from one or more databases
.TP 3n
\(bu
One or more tables from a single database
.sp
.RE
.PP
Beginning with MySQL Cluster NDB 6.3.22 and 6.4.3, you can (and should) use instead the options
\fB\-\-include\-databases\fR
and
\fB\-\-include\-tables\fR
for restoring only specific databases or tables, respectively.
\fB\-\-include\-databases\fR
takes a comma\-delimited list of databases to be restored.
\fB\-\-include\-tables\fR
takes a comma\-delimited list of tables (in
\fIdatabase\fR.\fItable\fR
format) to be restored. You can use these two options together. For example, the following causes all tables in databases
db1
and
db2, together with the tables
t1
and
t2
in database
db3, to be restored (and no other databases or tables):
.sp
.RS 3n
.nf
shell> \fBndb_restore [...] \-\-include\-databases=db1,db2 \-\-include\-tables=db3.t1,db3.t2\fR
.fi
.RE
.PP
(For the sake of clarity and brevity, we have omitted other, possibly required, options in the example just shown.) When
\fB\-\-include\-databases\fR,
\fB\-\-include\-tables\fR, or both are used, only those databases or tables specified are restored; all other databases and tables are ignored by
\fBndb_restore\fR.
.PP
Also beginning with MySQL Cluster NDB 6.3.22 and 6.4.3, it is possible to exclude from being restored one or more databases, tables, or both using the
\fBndb_restore\fR
options
\fB\-\-exclude\-databases\fR
and
\fB\-\-exclude\-tables\fR.
\fB\-\-exclude\-databases\fR
takes a comma\-delimited list of one or more databases which should not be restored.
\fB\-\-exclude\-tables\fR
takes a comma\-delimited list of one or more tables, using
\fIdatabase\fR.\fItable\fR
format, which should not be restored. You can use these two options together. For example, the following causes all tables in all databases
\fIexcept for\fR
databases
db1
and
db2, along with the tables
t1
and
t2
in database
db3,
\fInot\fR
to be restored:
.sp
.RS 3n
.nf
shell> \fBndb_restore [...] \-\-exclude\-databases=db1,db2 \-\-exclude\-tables=db3.t1,db3.t2\fR
.fi
.RE
.PP
(Again, we have omitted other possibly necessary options in the interest of clarity and brevity from the example just shown.)
.PP
You should not use
\fB\-\-include\-databases\fR
or
\fB\-\-include\-tables\fR
together with
\fB\-\-exclude\-databases\fR
or
\fB\-\-exclude\-tables\fR, since
\fB\-\-include\-databases\fR
and
\fB\-\-include\-tables\fR
exclude all databases and tables not explicitly named. Similarly,
\fB\-\-exclude\-databases\fR
and
\fB\-\-exclude\-tables\fR
include all databases and tables not listed in the arguments to these options.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
\fBNote\fR
.PP
\fBndb_restore\fR
reports both temporary and permanent errors. In the case of temporary errors, it may able to recover from them. Beginning with MySQL 5.1.12, it reports
Restore successful, but encountered temporary error, please look at configuration
in such cases.
.SH "COPYRIGHT"
.PP
Copyright 2007\-2008 MySQL AB, 2009 Sun Microsystems, Inc.
.PP
This documentation is free software; you can redistribute it and/or modify it only under the terms of the GNU General Public License as published by the Free Software Foundation; version 2 of the License.
.PP
This documentation is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
.PP
You should have received a copy of the GNU General Public License along with the program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110\-1301 USA or see http://www.gnu.org/licenses/.
.SH "SEE ALSO"
For more information, please refer to the MySQL Reference Manual,
which may already be installed locally and which is also available
online at http://dev.mysql.com/doc/.
.SH AUTHOR
MySQL AB (http://www.mysql.com/).
