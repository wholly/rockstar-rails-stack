# Makefile.in generated by automake 1.10.2 from Makefile.am.
# storage/ndb/src/kernel/blocks/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2004-2006 MySQL AB
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Copyright (C) 2004, 2006 MySQL AB
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Copyright (C) 2004, 2006 MySQL AB
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


pkgdatadir = $(datadir)/mysql
pkglibdir = $(libdir)/mysql
pkgincludedir = $(includedir)/mysql
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin9.6.0
host_triplet = i386-apple-darwin9.6.0
target_triplet = i386-apple-darwin9.6.0
EXTRA_PROGRAMS = ndb_print_file$(EXEEXT)
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/storage/ndb/config/common.mk.am \
	$(top_srcdir)/storage/ndb/config/type_kernel.mk.am
subdir = storage/ndb/src/kernel/blocks
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac-macros/alloca.m4 \
	$(top_srcdir)/config/ac-macros/check_cpu.m4 \
	$(top_srcdir)/config/ac-macros/character_sets.m4 \
	$(top_srcdir)/config/ac-macros/compiler_flag.m4 \
	$(top_srcdir)/config/ac-macros/plugins.m4 \
	$(top_srcdir)/config/ac-macros/ha_ndbcluster.m4 \
	$(top_srcdir)/config/ac-macros/large_file.m4 \
	$(top_srcdir)/config/ac-macros/misc.m4 \
	$(top_srcdir)/config/ac-macros/readline.m4 \
	$(top_srcdir)/config/ac-macros/ssl.m4 \
	$(top_srcdir)/config/ac-macros/zlib.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
libblocks_a_AR = $(AR) $(ARFLAGS)
libblocks_a_LIBADD =
am_libblocks_a_OBJECTS = tsman.$(OBJEXT) lgman.$(OBJEXT) \
	pgman.$(OBJEXT) diskpage.$(OBJEXT) restore.$(OBJEXT) \
	Cmvmi.$(OBJEXT) DbaccInit.$(OBJEXT) DbaccMain.$(OBJEXT) \
	Dbdict.$(OBJEXT) DbdihInit.$(OBJEXT) DbdihMain.$(OBJEXT) \
	DblqhInit.$(OBJEXT) DblqhMain.$(OBJEXT) DbtcInit.$(OBJEXT) \
	DbtcMain.$(OBJEXT) DbtupExecQuery.$(OBJEXT) \
	DbtupBuffer.$(OBJEXT) DbtupRoutines.$(OBJEXT) \
	DbtupCommit.$(OBJEXT) DbtupFixAlloc.$(OBJEXT) \
	DbtupTrigger.$(OBJEXT) DbtupAbort.$(OBJEXT) \
	DbtupPageMap.$(OBJEXT) DbtupPagMan.$(OBJEXT) \
	DbtupStoredProcDef.$(OBJEXT) DbtupMeta.$(OBJEXT) \
	DbtupTabDesMan.$(OBJEXT) DbtupGen.$(OBJEXT) \
	DbtupIndex.$(OBJEXT) DbtupDebug.$(OBJEXT) DbtupScan.$(OBJEXT) \
	DbtupDiskAlloc.$(OBJEXT) DbtupVarAlloc.$(OBJEXT) \
	tuppage.$(OBJEXT) Undo_buffer.$(OBJEXT) AsyncFile.$(OBJEXT) \
	Ndbfs.$(OBJEXT) VoidFs.$(OBJEXT) Filename.$(OBJEXT) \
	CircularIndex.$(OBJEXT) NdbcntrInit.$(OBJEXT) \
	NdbcntrSysTable.$(OBJEXT) NdbcntrMain.$(OBJEXT) \
	QmgrInit.$(OBJEXT) QmgrMain.$(OBJEXT) Trix.$(OBJEXT) \
	Backup.$(OBJEXT) BackupInit.$(OBJEXT) DbUtil.$(OBJEXT) \
	Suma.$(OBJEXT) SumaInit.$(OBJEXT) DbtuxGen.$(OBJEXT) \
	DbtuxMeta.$(OBJEXT) DbtuxMaint.$(OBJEXT) DbtuxNode.$(OBJEXT) \
	DbtuxTree.$(OBJEXT) DbtuxScan.$(OBJEXT) DbtuxSearch.$(OBJEXT) \
	DbtuxCmp.$(OBJEXT) DbtuxStat.$(OBJEXT) DbtuxDebug.$(OBJEXT)
libblocks_a_OBJECTS = $(am_libblocks_a_OBJECTS)
am_ndb_print_file_OBJECTS = print_file.$(OBJEXT) diskpage.$(OBJEXT) \
	tuppage.$(OBJEXT)
ndb_print_file_OBJECTS = $(am_ndb_print_file_OBJECTS)
ndb_print_file_LDADD = $(LDADD)
ndb_print_file_DEPENDENCIES =
ndb_print_file_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(ndb_print_file_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libblocks_a_SOURCES) $(ndb_print_file_SOURCES)
DIST_SOURCES = $(libblocks_a_SOURCES) $(ndb_print_file_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI_CHECK = abi_check
ACLOCAL = ${SHELL} /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33/missing --run aclocal-1.10
ALLOCA = 
AMTAR = ${SHELL} /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33/missing --run tar
AR = ar
ARFLAGS = cru
AS = /usr/bin/gcc-4.0 -c
ASFLAGS = 
AUTOCONF = ${SHELL} /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33/missing --run automake-1.10
AVAILABLE_LANGUAGES = czech danish dutch english estonian french german greek hungarian italian japanese korean norwegian norwegian-ny polish portuguese romanian russian serbian slovak spanish swedish ukrainian
AWK = awk
CC = /usr/bin/gcc-4.0
CCAS = /usr/bin/gcc-4.0
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -O2 -fPIC   
CCDEPMODE = depmode=gcc3
CC_VERSION = i686-apple-darwin9-gcc-4.0.1 (GCC) 4.0.1 (Apple Inc. build 5465)
CFLAGS =  -O2 -fPIC   -D_P1003_1B_VISIBLE -DSIGNAL_WITH_VIO_CLOSE -DSIGNALS_DONT_BREAK_READ -DIGNORE_SIGHUP_SIGQUIT  -DDONT_DECLARE_CXA_PURE_VIRTUAL
CHECK_PID = /bin/kill -0 $$PID > /dev/null 2> /dev/null
CHMOD = /bin/chmod
CLIENT_EXTRA_LDFLAGS = 
CLIENT_LIBS = -lm  -L/Users/parolkar/binaries/macports-1.7.1/lib/ -lssl -lcrypto -L/Users/parolkar/binaries/macports-1.7.1/lib -lz 
CLIENT_THREAD_LIBS = 
CMP = /usr/bin/cmp
COMPILATION_COMMENT = Source distribution
CONF_COMMAND = ./configure  '--prefix=/Users/parolkar/binaries/macports-1.7.1' '--mandir=/Users/parolkar/binaries/macports-1.7.1/share/man' '--infodir=/Users/parolkar/binaries/macports-1.7.1/share/info' '--localstatedir=/Users/parolkar/binaries/macports-1.7.1/var/db/mysql5' '--libdir=/Users/parolkar/binaries/macports-1.7.1/lib/mysql5' '--bindir=/Users/parolkar/binaries/macports-1.7.1/lib/mysql5/bin' '--includedir=/Users/parolkar/binaries/macports-1.7.1/include/mysql5' '--datadir=/Users/parolkar/binaries/macports-1.7.1/share/mysql5' '--sysconfdir=/Users/parolkar/binaries/macports-1.7.1/etc/mysql5' '--with-zlib-dir=/Users/parolkar/binaries/macports-1.7.1' '--with-ssl=/Users/parolkar/binaries/macports-1.7.1' '--with-extra-charsets=complex' '--with-unix-socket-path=/Users/parolkar/binaries/macports-1.7.1/var/run/mysql5/mysqld.sock' '--with-mysqld-user=mysql' '--without-docs' '--without-bench' '--with-partition' '--with-plugins=all' '--enable-thread-safe-client' '--without-readline' '--with-embedded-server' '--with-pic' 'CC=/usr/bin/gcc-4.0' 'CFLAGS=-O2 -fPIC' 'LDFLAGS=-L/Users/parolkar/binaries/macports-1.7.1/lib' 'CPPFLAGS=-I/Users/parolkar/binaries/macports-1.7.1/include' 'CXX=/usr/bin/g++-4.0' 'CXXFLAGS=-O2 -fPIC' 'CPP=/usr/bin/cpp-4.0' 'FFLAGS=-O2'
CP = /bin/cp
CPP = /usr/bin/cpp-4.0
CPPFLAGS = -I/Users/parolkar/binaries/macports-1.7.1/include
CXX = /usr/bin/g++-4.0
CXXCPP = /usr/bin/g++-4.0 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -O2 -fPIC   -fno-implicit-templates -fno-exceptions -fno-rtti -D_P1003_1B_VISIBLE -DSIGNAL_WITH_VIO_CLOSE -DSIGNALS_DONT_BREAK_READ -DIGNORE_SIGHUP_SIGQUIT  -DDONT_DECLARE_CXA_PURE_VIRTUAL
CXXLDFLAGS = 
CXX_VERSION = i686-apple-darwin9-g++-4.0.1 (GCC) 4.0.1 (Apple Inc. build 5465)
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H -DNDEBUG $(DEFS_LOC) $(NDB_EXTRA_FLAGS)
DEPDIR = .deps
DIFF = /usr/bin/diff
DOT_FRM_VERSION = 6
DOXYGEN = no
DVIS = 
ECHO = /bin/echo
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = -O2
FIND_PROC = /bin/ps wwwp $$PID | grep -v " grep" | grep -v mysqld_safe | grep -- "$$MYSQLD" > /dev/null
GETCONF = getconf
GREP = /usr/bin/grep
GXX = yes
HOSTNAME = /bin/hostname
INNODB_DYNAMIC_CFLAGS = -DMYSQL_DYNAMIC_PLUGIN -prefer-non-pic
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KILL = /bin/kill
LD = /usr/libexec/gcc/i686-apple-darwin9/4.0.1/ld
LDFLAGS = -L/Users/parolkar/binaries/macports-1.7.1/lib 
LD_VERSION_SCRIPT = 
LIBDL = -ldl 
LIBEDIT_LOBJECTS = 
LIBOBJS = 
LIBS = -lm  
LIBTOOL = $(SHELL) $(top_builddir)/libtool --preserve-dup-deps
LIB_EXTRA_CCFLAGS = 
LM_CFLAGS = 
LN = /bin/ln
LN_CP_F = /bin/ln -s
LN_S = ln -s
LTLIBOBJS = 
MACHINE_TYPE = i386
MAKEINDEX = no
MAKEINFO = ${SHELL} /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33/missing --run makeinfo
MAKE_BINARY_DISTRIBUTION_OPTIONS =  --with-ndbcluster
MAKE_SHELL = /bin/sh
MKDIR_P = ../../../../.././install-sh -c -d
MV = /bin/mv
MYSQLD_DEFAULT_SWITCHES = 
MYSQLD_EXTRA_LDFLAGS = 
MYSQLD_EXTRA_LIBS = 
MYSQLD_USER = mysql
MYSQL_BASE_VERSION = 5.1
MYSQL_COPYRIGHT_YEAR = 2009
MYSQL_NO_DASH_VERSION = 5.1.33
MYSQL_PREVIOUS_BASE_VERSION = 5.0
MYSQL_SERVER_SUFFIX = 
MYSQL_TCP_PORT = 3306
MYSQL_TCP_PORT_DEFAULT = 0
MYSQL_UNIX_ADDR = /Users/parolkar/binaries/macports-1.7.1/var/run/mysql5/mysqld.sock
MYSQL_VERSION_ID = 50133
NDB_DEFS = -DNDEBUG
NDB_LD_VERSION_SCRIPT = 
NDB_SCI_INCLUDES = 
NDB_SCI_LIBS = 
NDB_SHARED_LIB_MAJOR_VERSION = 3
NDB_SHARED_LIB_VERSION = 3:0:0
NDB_SIZEOF_CHAR = 1
NDB_SIZEOF_CHARP = 4
NDB_SIZEOF_INT = 4
NDB_SIZEOF_LONG = 4
NDB_SIZEOF_LONG_LONG = 8
NDB_SIZEOF_SHORT = 2
NDB_VERSION_BUILD = 33
NDB_VERSION_MAJOR = 5
NDB_VERSION_MINOR = 1
NDB_VERSION_STATUS = 
NM = /usr/bin/nm -p
NOINST_LDFLAGS = -static
NON_THREADED_LIBS = -lm 
OBJEXT = o
PACKAGE = mysql
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PDFLATEX = no
PDFMANUAL = 
PERL = /usr/bin/perl
PERL5 = /usr/bin/perl
PROTOCOL_VERSION = 10
PS = /bin/ps
RANLIB = ranlib
RM = /bin/rm
SAVE_ASFLAGS = 
SAVE_CC = /usr/bin/gcc-4.0
SAVE_CFLAGS = -O2 -fPIC
SAVE_CXX = /usr/bin/g++-4.0
SAVE_CXXFLAGS = -O2 -fPIC
SAVE_CXXLDFLAGS = 
SAVE_LDFLAGS = -L/Users/parolkar/binaries/macports-1.7.1/lib
SED = /usr/bin/sed
SET_MAKE = 
SHARED_LIB_MAJOR_VERSION = 16
SHARED_LIB_VERSION = 16:0:0
SHELL = /bin/sh
STATIC_NSS_FLAGS = 
STRIP = strip
SYSTEM_TYPE = apple-darwin9.6.0
TAR = gnutar
TARGET_LINUX = false
TERMCAP_LIB = -lncurses
TEST_NDBCLUSTER = --ndbcluster
THREAD_LOBJECTS = thr_alarm.o thr_lock.o thr_mutex.o thr_rwlock.o my_pthread.o my_thr_init.o mf_keycache.o
VERSION = 5.1.33
WRAPLIBS = 
YACC = bison -y -p MYSQL
ZLIB_DEPS = -L/Users/parolkar/binaries/macports-1.7.1/lib -lz
ZLIB_INCLUDES = -I/Users/parolkar/binaries/macports-1.7.1/include
ZLIB_LIBS = -L/Users/parolkar/binaries/macports-1.7.1/lib -lz
abs_builddir = /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33/storage/ndb/src/kernel/blocks
abs_srcdir = /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33/storage/ndb/src/kernel/blocks
abs_top_builddir = /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33
abs_top_srcdir = /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33
ac_ct_CC = /usr/bin/gcc-4.0
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = /Users/parolkar/binaries/macports-1.7.1/lib/mysql5/bin
build = i386-apple-darwin9.6.0
build_alias = 
build_cpu = i386
build_os = darwin9.6.0
build_vendor = apple
builddir = .
condition_dependent_plugin_includes =  -I$(top_srcdir)/storage/federated/ -I$(top_srcdir)/storage/heap/ -I$(top_srcdir)/storage/myisam/ -I$(top_srcdir)/storage/myisammrg/
condition_dependent_plugin_links =  storage/federated/ha_federated.cc storage/heap/ha_heap.cc storage/myisam/ha_myisam.cc storage/myisammrg/ha_myisammrg.cc
condition_dependent_plugin_modules =  ha_federated.cc ha_heap.cc ha_myisam.cc ha_myisammrg.cc
condition_dependent_plugin_objects =  ha_federated.o ha_heap.o ha_myisam.o ha_myisammrg.o
datadir = /Users/parolkar/binaries/macports-1.7.1/share/mysql5
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
docs_dirs = 
dvidir = ${docdir}
exec_prefix = ${prefix}
extra_docs = 
host = i386-apple-darwin9.6.0
host_alias = 
host_cpu = i386
host_os = darwin9.6.0
host_vendor = apple
htmldir = ${docdir}
includedir = /Users/parolkar/binaries/macports-1.7.1/include/mysql5
infodir = /Users/parolkar/binaries/macports-1.7.1/share/info
innodb_system_libs = 
install_sh = $(SHELL) /Users/parolkar/binaries/macports-1.7.1/var/macports/build/_Users_parolkar_binaries_macports-1.7.1_var_macports_sources_rsync.macports.org_release_ports_databases_mysql5-devel/work/mysql-5.1.33/install-sh
libdir = /Users/parolkar/binaries/macports-1.7.1/lib/mysql5
libexecdir = ${exec_prefix}/libexec
libmysqld_dirs = libmysqld
localedir = ${datarootdir}/locale
localstatedir = /Users/parolkar/binaries/macports-1.7.1/var/db/mysql5
man1_files = comp_err.1 innochecksum.1 make_win_bin_dist.1 msql2mysql.1 my_print_defaults.1 myisam_ftdump.1 myisamchk.1 myisamlog.1 myisampack.1 mysql-stress-test.pl.1 mysql-test-run.pl.1 mysql.1 mysql.server.1 mysql_client_test.1 mysql_client_test_embedded.1 mysql_config.1 mysql_convert_table_format.1 mysql_find_rows.1 mysql_fix_extensions.1 mysql_fix_privilege_tables.1 mysql_install_db.1 mysql_secure_installation.1 mysql_setpermission.1 mysql_tzinfo_to_sql.1 mysql_upgrade.1 mysql_waitpid.1 mysql_zap.1 mysqlaccess.1 mysqladmin.1 mysqlbinlog.1 mysqlbug.1 mysqlcheck.1 mysqld_multi.1 mysqld_safe.1 mysqldump.1 mysqldumpslow.1 mysqlhotcopy.1 mysqlimport.1 mysqlman.1 mysqlshow.1 mysqlslap.1 mysqltest.1 mysqltest_embedded.1 ndb_config.1 ndb_cpcd.1 ndb_delete_all.1 ndb_desc.1 ndb_drop_index.1 ndb_drop_table.1 ndb_error_reporter.1 ndb_mgm.1 ndb_print_backup_file.1 ndb_print_schema_file.1 ndb_print_sys_file.1 ndb_restore.1 ndb_select_all.1 ndb_select_count.1 ndb_show_tables.1 ndb_size.pl.1 ndb_waiter.1 ndbd_redo_log_reader.1 perror.1 replace.1 resolve_stack_dump.1 resolveip.1
man8_files = mysqld.8 mysqlmanager.8 ndb_mgmd.8 ndbd.8 ndbmtd.8
man_dirs = man
mandir = /Users/parolkar/binaries/macports-1.7.1/share/man
mkdir_p = $(top_builddir)/./install-sh -c -d
mysql_pg_dirs =  daemon_example fulltext
mysql_pg_distdirs =  daemon_example fulltext
mysql_pg_unittest_dirs =  ../plugin/daemon_example ../plugin/fulltext
mysql_plugin_defs = , builtin_partition_plugin, builtin_archive_plugin, builtin_blackhole_plugin, builtin_csv_plugin, builtin_federated_plugin, builtin_heap_plugin, builtin_innobase_plugin, builtin_myisam_plugin, builtin_myisammrg_plugin, builtin_ndbcluster_plugin
mysql_plugin_dirs = 
mysql_plugin_libs =  $(top_builddir)/storage/archive/libarchive.a $(top_builddir)/storage/blackhole/libblackhole.a $(top_builddir)/storage/csv/libcsv.a $(top_builddir)/storage/federated/libfederated.a $(top_builddir)/storage/heap/libheap.a $(top_builddir)/storage/innobase/libinnobase.a $(top_builddir)/storage/myisam/libmyisam.a $(top_builddir)/storage/myisammrg/libmyisammrg.a $(ndbcluster_libs) $(ndbcluster_system_libs) $(NDB_SCI_LIBS)
mysql_se_dirs =  archive blackhole csv example federated heap innobase myisam myisammrg ndb
mysql_se_distdirs =  archive blackhole csv example federated heap ibmdb2i innobase myisam myisammrg ndb
mysql_se_unittest_dirs =  ../storage/archive ../storage/blackhole ../storage/csv ../storage/example ../storage/federated ../storage/heap ../storage/innobase ../storage/myisam ../storage/myisammrg ../storage/ndb
ndb_bin_am_ldflags = -static
ndb_cxxflags_fix =  
ndb_mgmclient_libs = $(top_builddir)/storage/ndb/src/mgmclient/libndbmgmclient.la
ndb_opt_subdirs = 
ndb_port = 1186
ndb_transporter_opt_objs =  SHM_Transporter.lo SHM_Transporter.unix.lo
ndbcluster_includes = -I$(top_builddir)/storage/ndb/include -I$(top_srcdir)/storage/ndb/include -I$(top_srcdir)/storage/ndb/include/ndbapi -I$(top_srcdir)/storage/ndb/include/mgmapi
ndbcluster_libs = $(top_builddir)/storage/ndb/src/.libs/libndbclient.a
ndbcluster_system_libs = 
netware_dir = 
oldincludedir = /usr/include
openssl_includes = -I/Users/parolkar/binaries/macports-1.7.1/include
openssl_libs = -L/Users/parolkar/binaries/macports-1.7.1/lib/ -lssl -lcrypto
pdfdir = ${docdir}
plugin_archive_shared_target = 
plugin_archive_static_target = libarchive.a
plugin_blackhole_shared_target = 
plugin_blackhole_static_target = libblackhole.a
plugin_csv_shared_target = 
plugin_csv_static_target = libcsv.a
plugin_daemon_example_shared_target = libdaemon_example.la
plugin_daemon_example_static_target = 
plugin_example_shared_target = ha_example.la
plugin_example_static_target = 
plugin_federated_shared_target = 
plugin_federated_static_target = libfederated.a
plugin_ftexample_shared_target = mypluglib.la
plugin_ftexample_static_target = 
plugin_heap_shared_target = 
plugin_heap_static_target = libheap.a
plugin_ibmdb2i_shared_target = 
plugin_ibmdb2i_static_target = 
plugin_innobase_shared_target = 
plugin_innobase_static_target = libinnobase.a
plugin_myisam_shared_target = 
plugin_myisam_static_target = libmyisam.a
plugin_myisammrg_shared_target = 
plugin_myisammrg_static_target = libmyisammrg.a
plugin_ndbcluster_shared_target = 
plugin_ndbcluster_static_target = $(ndbcluster_libs) $(ndbcluster_system_libs) $(NDB_SCI_LIBS)
plugin_partition_shared_target = 
plugin_partition_static_target = yes
prefix = /Users/parolkar/binaries/macports-1.7.1
program_transform_name = s,x,x,
psdir = ${docdir}
pstack_dir = 
pstack_libs = 
readline_basedir = 
readline_dir = 
readline_h_ln_cmd = 
readline_link = -lreadline
readline_topdir = 
sbindir = ${exec_prefix}/sbin
server_scripts = mysqld_safe mysql_install_db
sharedstatedir = ${prefix}/com
sql_client_dirs = strings regex mysys libmysql libmysql_r client
sql_server = vio sql
sql_server_dirs = strings mysys dbug extra regex
sql_union_dirs =  strings mysys dbug extra regex  libmysql  libmysql_r  client 
srcdir = .
sysconfdir = /Users/parolkar/binaries/macports-1.7.1/etc/mysql5
target = i386-apple-darwin9.6.0
target_alias = 
target_cpu = i386
target_os = darwin9.6.0
target_vendor = apple
tools_dirs = server-tools
top_build_prefix = ../../../../../
top_builddir = ../../../../..
top_srcdir = ../../../../..
uname_prog = /usr/bin/uname
yassl_dir = 
yassl_h_ln_cmd = 
yassl_libs = 
yassl_taocrypt_extra_cxxflags = 
zlib_dir = 
SUBDIRS = \
	dbdict		\
	dbdih		\
	dblqh		\
	dbtup		\
        backup          

noinst_LIBRARIES = libblocks.a
INCLUDES_LOC = -I$(top_srcdir)/storage/ndb/src/kernel/blocks/dblqh
libblocks_a_SOURCES = tsman.cpp lgman.cpp pgman.cpp diskpage.cpp restore.cpp\
  cmvmi/Cmvmi.cpp \
  dbacc/DbaccInit.cpp dbacc/DbaccMain.cpp \
  dbdict/Dbdict.cpp \
  dbdih/DbdihInit.cpp dbdih/DbdihMain.cpp \
  dblqh/DblqhInit.cpp dblqh/DblqhMain.cpp \
  dbtc/DbtcInit.cpp dbtc/DbtcMain.cpp \
  dbtup/DbtupExecQuery.cpp dbtup/DbtupBuffer.cpp \
  dbtup/DbtupRoutines.cpp dbtup/DbtupCommit.cpp \
  dbtup/DbtupFixAlloc.cpp dbtup/DbtupTrigger.cpp \
  dbtup/DbtupAbort.cpp dbtup/DbtupPageMap.cpp \
  dbtup/DbtupPagMan.cpp dbtup/DbtupStoredProcDef.cpp \
  dbtup/DbtupMeta.cpp dbtup/DbtupTabDesMan.cpp \
  dbtup/DbtupGen.cpp dbtup/DbtupIndex.cpp \
  dbtup/DbtupDebug.cpp dbtup/DbtupScan.cpp \
  dbtup/DbtupDiskAlloc.cpp dbtup/DbtupVarAlloc.cpp \
  dbtup/tuppage.cpp dbtup/Undo_buffer.cpp \
  ndbfs/AsyncFile.cpp ndbfs/Ndbfs.cpp ndbfs/VoidFs.cpp \
  ndbfs/Filename.cpp ndbfs/CircularIndex.cpp \
  ndbcntr/NdbcntrInit.cpp ndbcntr/NdbcntrSysTable.cpp ndbcntr/NdbcntrMain.cpp \
  qmgr/QmgrInit.cpp qmgr/QmgrMain.cpp \
  trix/Trix.cpp \
  backup/Backup.cpp backup/BackupInit.cpp \
  dbutil/DbUtil.cpp \
  suma/Suma.cpp suma/SumaInit.cpp \
  dbtux/DbtuxGen.cpp dbtux/DbtuxMeta.cpp dbtux/DbtuxMaint.cpp \
  dbtux/DbtuxNode.cpp dbtux/DbtuxTree.cpp dbtux/DbtuxScan.cpp \
  dbtux/DbtuxSearch.cpp dbtux/DbtuxCmp.cpp dbtux/DbtuxStat.cpp \
  dbtux/DbtuxDebug.cpp

ndb_print_file_SOURCES = print_file.cpp diskpage.cpp dbtup/tuppage.cpp
ndb_print_file_LDFLAGS = -static \
  $(top_builddir)/storage/ndb/src/libndbclient.la \
         $(top_builddir)/dbug/libdbug.a \
         $(top_builddir)/mysys/libmysys.a \
         $(top_builddir)/strings/libmystrings.a

ndbbindir = "$(libexecdir)"
ndbtoolsdir = "$(bindir)"
ndbtestdir = "$(bindir)"
ndblibdir = "$(pkglibdir)"
ndbincludedir = "$(pkgincludedir)/storage/ndb"
ndbapiincludedir = "$(pkgincludedir)/storage/ndb/ndbapi"
mgmapiincludedir = "$(pkgincludedir)/storage/ndb/mgmapi"
INCLUDES = $(INCLUDES_LOC) -I$(srcdir) -I$(top_builddir)/include \
	-I$(top_builddir)/storage/ndb/include -I$(top_srcdir)/include \
	-I$(top_srcdir)/storage/ndb/include \
	-I$(top_srcdir)/storage/ndb/src/kernel/vm \
	-I$(top_srcdir)/storage/ndb/src/kernel/error \
	-I$(top_srcdir)/storage/ndb/src/kernel \
	-I$(top_srcdir)/storage/ndb/include/kernel \
	-I$(top_srcdir)/storage/ndb/include/transporter \
	-I$(top_srcdir)/storage/ndb/include/debugger \
	-I$(top_srcdir)/storage/ndb/include/mgmapi \
	-I$(top_srcdir)/storage/ndb/include/mgmcommon \
	-I$(top_srcdir)/storage/ndb/include/ndbapi \
	-I$(top_srcdir)/storage/ndb/include/util \
	-I$(top_srcdir)/storage/ndb/include/portlib \
	-I$(top_srcdir)/storage/ndb/include/logger
LDADD = $(LDADD_LOC)
NDB_CXXFLAGS =   $(NDB_CXXFLAGS_LOC) 
NDB_AM_CXXFLAGS := $(AM_CXXFLAGS)
AM_CXXFLAGS = $(NDB_AM_CXXFLAGS) $(NDB_CXXFLAGS)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/storage/ndb/config/common.mk.am $(top_srcdir)/storage/ndb/config/type_kernel.mk.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  storage/ndb/src/kernel/blocks/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  storage/ndb/src/kernel/blocks/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libblocks.a: $(libblocks_a_OBJECTS) $(libblocks_a_DEPENDENCIES) 
	-rm -f libblocks.a
	$(libblocks_a_AR) libblocks.a $(libblocks_a_OBJECTS) $(libblocks_a_LIBADD)
	$(RANLIB) libblocks.a
ndb_print_file$(EXEEXT): $(ndb_print_file_OBJECTS) $(ndb_print_file_DEPENDENCIES) 
	@rm -f ndb_print_file$(EXEEXT)
	$(ndb_print_file_LINK) $(ndb_print_file_OBJECTS) $(ndb_print_file_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AsyncFile.Po
include ./$(DEPDIR)/Backup.Po
include ./$(DEPDIR)/BackupInit.Po
include ./$(DEPDIR)/CircularIndex.Po
include ./$(DEPDIR)/Cmvmi.Po
include ./$(DEPDIR)/DbUtil.Po
include ./$(DEPDIR)/DbaccInit.Po
include ./$(DEPDIR)/DbaccMain.Po
include ./$(DEPDIR)/Dbdict.Po
include ./$(DEPDIR)/DbdihInit.Po
include ./$(DEPDIR)/DbdihMain.Po
include ./$(DEPDIR)/DblqhInit.Po
include ./$(DEPDIR)/DblqhMain.Po
include ./$(DEPDIR)/DbtcInit.Po
include ./$(DEPDIR)/DbtcMain.Po
include ./$(DEPDIR)/DbtupAbort.Po
include ./$(DEPDIR)/DbtupBuffer.Po
include ./$(DEPDIR)/DbtupCommit.Po
include ./$(DEPDIR)/DbtupDebug.Po
include ./$(DEPDIR)/DbtupDiskAlloc.Po
include ./$(DEPDIR)/DbtupExecQuery.Po
include ./$(DEPDIR)/DbtupFixAlloc.Po
include ./$(DEPDIR)/DbtupGen.Po
include ./$(DEPDIR)/DbtupIndex.Po
include ./$(DEPDIR)/DbtupMeta.Po
include ./$(DEPDIR)/DbtupPagMan.Po
include ./$(DEPDIR)/DbtupPageMap.Po
include ./$(DEPDIR)/DbtupRoutines.Po
include ./$(DEPDIR)/DbtupScan.Po
include ./$(DEPDIR)/DbtupStoredProcDef.Po
include ./$(DEPDIR)/DbtupTabDesMan.Po
include ./$(DEPDIR)/DbtupTrigger.Po
include ./$(DEPDIR)/DbtupVarAlloc.Po
include ./$(DEPDIR)/DbtuxCmp.Po
include ./$(DEPDIR)/DbtuxDebug.Po
include ./$(DEPDIR)/DbtuxGen.Po
include ./$(DEPDIR)/DbtuxMaint.Po
include ./$(DEPDIR)/DbtuxMeta.Po
include ./$(DEPDIR)/DbtuxNode.Po
include ./$(DEPDIR)/DbtuxScan.Po
include ./$(DEPDIR)/DbtuxSearch.Po
include ./$(DEPDIR)/DbtuxStat.Po
include ./$(DEPDIR)/DbtuxTree.Po
include ./$(DEPDIR)/Filename.Po
include ./$(DEPDIR)/NdbcntrInit.Po
include ./$(DEPDIR)/NdbcntrMain.Po
include ./$(DEPDIR)/NdbcntrSysTable.Po
include ./$(DEPDIR)/Ndbfs.Po
include ./$(DEPDIR)/QmgrInit.Po
include ./$(DEPDIR)/QmgrMain.Po
include ./$(DEPDIR)/Suma.Po
include ./$(DEPDIR)/SumaInit.Po
include ./$(DEPDIR)/Trix.Po
include ./$(DEPDIR)/Undo_buffer.Po
include ./$(DEPDIR)/VoidFs.Po
include ./$(DEPDIR)/diskpage.Po
include ./$(DEPDIR)/lgman.Po
include ./$(DEPDIR)/pgman.Po
include ./$(DEPDIR)/print_file.Po
include ./$(DEPDIR)/restore.Po
include ./$(DEPDIR)/tsman.Po
include ./$(DEPDIR)/tuppage.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

Cmvmi.o: cmvmi/Cmvmi.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Cmvmi.o -MD -MP -MF $(DEPDIR)/Cmvmi.Tpo -c -o Cmvmi.o `test -f 'cmvmi/Cmvmi.cpp' || echo '$(srcdir)/'`cmvmi/Cmvmi.cpp
	mv -f $(DEPDIR)/Cmvmi.Tpo $(DEPDIR)/Cmvmi.Po
#	source='cmvmi/Cmvmi.cpp' object='Cmvmi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Cmvmi.o `test -f 'cmvmi/Cmvmi.cpp' || echo '$(srcdir)/'`cmvmi/Cmvmi.cpp

Cmvmi.obj: cmvmi/Cmvmi.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Cmvmi.obj -MD -MP -MF $(DEPDIR)/Cmvmi.Tpo -c -o Cmvmi.obj `if test -f 'cmvmi/Cmvmi.cpp'; then $(CYGPATH_W) 'cmvmi/Cmvmi.cpp'; else $(CYGPATH_W) '$(srcdir)/cmvmi/Cmvmi.cpp'; fi`
	mv -f $(DEPDIR)/Cmvmi.Tpo $(DEPDIR)/Cmvmi.Po
#	source='cmvmi/Cmvmi.cpp' object='Cmvmi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Cmvmi.obj `if test -f 'cmvmi/Cmvmi.cpp'; then $(CYGPATH_W) 'cmvmi/Cmvmi.cpp'; else $(CYGPATH_W) '$(srcdir)/cmvmi/Cmvmi.cpp'; fi`

DbaccInit.o: dbacc/DbaccInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbaccInit.o -MD -MP -MF $(DEPDIR)/DbaccInit.Tpo -c -o DbaccInit.o `test -f 'dbacc/DbaccInit.cpp' || echo '$(srcdir)/'`dbacc/DbaccInit.cpp
	mv -f $(DEPDIR)/DbaccInit.Tpo $(DEPDIR)/DbaccInit.Po
#	source='dbacc/DbaccInit.cpp' object='DbaccInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbaccInit.o `test -f 'dbacc/DbaccInit.cpp' || echo '$(srcdir)/'`dbacc/DbaccInit.cpp

DbaccInit.obj: dbacc/DbaccInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbaccInit.obj -MD -MP -MF $(DEPDIR)/DbaccInit.Tpo -c -o DbaccInit.obj `if test -f 'dbacc/DbaccInit.cpp'; then $(CYGPATH_W) 'dbacc/DbaccInit.cpp'; else $(CYGPATH_W) '$(srcdir)/dbacc/DbaccInit.cpp'; fi`
	mv -f $(DEPDIR)/DbaccInit.Tpo $(DEPDIR)/DbaccInit.Po
#	source='dbacc/DbaccInit.cpp' object='DbaccInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbaccInit.obj `if test -f 'dbacc/DbaccInit.cpp'; then $(CYGPATH_W) 'dbacc/DbaccInit.cpp'; else $(CYGPATH_W) '$(srcdir)/dbacc/DbaccInit.cpp'; fi`

DbaccMain.o: dbacc/DbaccMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbaccMain.o -MD -MP -MF $(DEPDIR)/DbaccMain.Tpo -c -o DbaccMain.o `test -f 'dbacc/DbaccMain.cpp' || echo '$(srcdir)/'`dbacc/DbaccMain.cpp
	mv -f $(DEPDIR)/DbaccMain.Tpo $(DEPDIR)/DbaccMain.Po
#	source='dbacc/DbaccMain.cpp' object='DbaccMain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbaccMain.o `test -f 'dbacc/DbaccMain.cpp' || echo '$(srcdir)/'`dbacc/DbaccMain.cpp

DbaccMain.obj: dbacc/DbaccMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbaccMain.obj -MD -MP -MF $(DEPDIR)/DbaccMain.Tpo -c -o DbaccMain.obj `if test -f 'dbacc/DbaccMain.cpp'; then $(CYGPATH_W) 'dbacc/DbaccMain.cpp'; else $(CYGPATH_W) '$(srcdir)/dbacc/DbaccMain.cpp'; fi`
	mv -f $(DEPDIR)/DbaccMain.Tpo $(DEPDIR)/DbaccMain.Po
#	source='dbacc/DbaccMain.cpp' object='DbaccMain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbaccMain.obj `if test -f 'dbacc/DbaccMain.cpp'; then $(CYGPATH_W) 'dbacc/DbaccMain.cpp'; else $(CYGPATH_W) '$(srcdir)/dbacc/DbaccMain.cpp'; fi`

Dbdict.o: dbdict/Dbdict.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Dbdict.o -MD -MP -MF $(DEPDIR)/Dbdict.Tpo -c -o Dbdict.o `test -f 'dbdict/Dbdict.cpp' || echo '$(srcdir)/'`dbdict/Dbdict.cpp
	mv -f $(DEPDIR)/Dbdict.Tpo $(DEPDIR)/Dbdict.Po
#	source='dbdict/Dbdict.cpp' object='Dbdict.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Dbdict.o `test -f 'dbdict/Dbdict.cpp' || echo '$(srcdir)/'`dbdict/Dbdict.cpp

Dbdict.obj: dbdict/Dbdict.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Dbdict.obj -MD -MP -MF $(DEPDIR)/Dbdict.Tpo -c -o Dbdict.obj `if test -f 'dbdict/Dbdict.cpp'; then $(CYGPATH_W) 'dbdict/Dbdict.cpp'; else $(CYGPATH_W) '$(srcdir)/dbdict/Dbdict.cpp'; fi`
	mv -f $(DEPDIR)/Dbdict.Tpo $(DEPDIR)/Dbdict.Po
#	source='dbdict/Dbdict.cpp' object='Dbdict.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Dbdict.obj `if test -f 'dbdict/Dbdict.cpp'; then $(CYGPATH_W) 'dbdict/Dbdict.cpp'; else $(CYGPATH_W) '$(srcdir)/dbdict/Dbdict.cpp'; fi`

DbdihInit.o: dbdih/DbdihInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbdihInit.o -MD -MP -MF $(DEPDIR)/DbdihInit.Tpo -c -o DbdihInit.o `test -f 'dbdih/DbdihInit.cpp' || echo '$(srcdir)/'`dbdih/DbdihInit.cpp
	mv -f $(DEPDIR)/DbdihInit.Tpo $(DEPDIR)/DbdihInit.Po
#	source='dbdih/DbdihInit.cpp' object='DbdihInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbdihInit.o `test -f 'dbdih/DbdihInit.cpp' || echo '$(srcdir)/'`dbdih/DbdihInit.cpp

DbdihInit.obj: dbdih/DbdihInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbdihInit.obj -MD -MP -MF $(DEPDIR)/DbdihInit.Tpo -c -o DbdihInit.obj `if test -f 'dbdih/DbdihInit.cpp'; then $(CYGPATH_W) 'dbdih/DbdihInit.cpp'; else $(CYGPATH_W) '$(srcdir)/dbdih/DbdihInit.cpp'; fi`
	mv -f $(DEPDIR)/DbdihInit.Tpo $(DEPDIR)/DbdihInit.Po
#	source='dbdih/DbdihInit.cpp' object='DbdihInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbdihInit.obj `if test -f 'dbdih/DbdihInit.cpp'; then $(CYGPATH_W) 'dbdih/DbdihInit.cpp'; else $(CYGPATH_W) '$(srcdir)/dbdih/DbdihInit.cpp'; fi`

DbdihMain.o: dbdih/DbdihMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbdihMain.o -MD -MP -MF $(DEPDIR)/DbdihMain.Tpo -c -o DbdihMain.o `test -f 'dbdih/DbdihMain.cpp' || echo '$(srcdir)/'`dbdih/DbdihMain.cpp
	mv -f $(DEPDIR)/DbdihMain.Tpo $(DEPDIR)/DbdihMain.Po
#	source='dbdih/DbdihMain.cpp' object='DbdihMain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbdihMain.o `test -f 'dbdih/DbdihMain.cpp' || echo '$(srcdir)/'`dbdih/DbdihMain.cpp

DbdihMain.obj: dbdih/DbdihMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbdihMain.obj -MD -MP -MF $(DEPDIR)/DbdihMain.Tpo -c -o DbdihMain.obj `if test -f 'dbdih/DbdihMain.cpp'; then $(CYGPATH_W) 'dbdih/DbdihMain.cpp'; else $(CYGPATH_W) '$(srcdir)/dbdih/DbdihMain.cpp'; fi`
	mv -f $(DEPDIR)/DbdihMain.Tpo $(DEPDIR)/DbdihMain.Po
#	source='dbdih/DbdihMain.cpp' object='DbdihMain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbdihMain.obj `if test -f 'dbdih/DbdihMain.cpp'; then $(CYGPATH_W) 'dbdih/DbdihMain.cpp'; else $(CYGPATH_W) '$(srcdir)/dbdih/DbdihMain.cpp'; fi`

DblqhInit.o: dblqh/DblqhInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DblqhInit.o -MD -MP -MF $(DEPDIR)/DblqhInit.Tpo -c -o DblqhInit.o `test -f 'dblqh/DblqhInit.cpp' || echo '$(srcdir)/'`dblqh/DblqhInit.cpp
	mv -f $(DEPDIR)/DblqhInit.Tpo $(DEPDIR)/DblqhInit.Po
#	source='dblqh/DblqhInit.cpp' object='DblqhInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DblqhInit.o `test -f 'dblqh/DblqhInit.cpp' || echo '$(srcdir)/'`dblqh/DblqhInit.cpp

DblqhInit.obj: dblqh/DblqhInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DblqhInit.obj -MD -MP -MF $(DEPDIR)/DblqhInit.Tpo -c -o DblqhInit.obj `if test -f 'dblqh/DblqhInit.cpp'; then $(CYGPATH_W) 'dblqh/DblqhInit.cpp'; else $(CYGPATH_W) '$(srcdir)/dblqh/DblqhInit.cpp'; fi`
	mv -f $(DEPDIR)/DblqhInit.Tpo $(DEPDIR)/DblqhInit.Po
#	source='dblqh/DblqhInit.cpp' object='DblqhInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DblqhInit.obj `if test -f 'dblqh/DblqhInit.cpp'; then $(CYGPATH_W) 'dblqh/DblqhInit.cpp'; else $(CYGPATH_W) '$(srcdir)/dblqh/DblqhInit.cpp'; fi`

DblqhMain.o: dblqh/DblqhMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DblqhMain.o -MD -MP -MF $(DEPDIR)/DblqhMain.Tpo -c -o DblqhMain.o `test -f 'dblqh/DblqhMain.cpp' || echo '$(srcdir)/'`dblqh/DblqhMain.cpp
	mv -f $(DEPDIR)/DblqhMain.Tpo $(DEPDIR)/DblqhMain.Po
#	source='dblqh/DblqhMain.cpp' object='DblqhMain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DblqhMain.o `test -f 'dblqh/DblqhMain.cpp' || echo '$(srcdir)/'`dblqh/DblqhMain.cpp

DblqhMain.obj: dblqh/DblqhMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DblqhMain.obj -MD -MP -MF $(DEPDIR)/DblqhMain.Tpo -c -o DblqhMain.obj `if test -f 'dblqh/DblqhMain.cpp'; then $(CYGPATH_W) 'dblqh/DblqhMain.cpp'; else $(CYGPATH_W) '$(srcdir)/dblqh/DblqhMain.cpp'; fi`
	mv -f $(DEPDIR)/DblqhMain.Tpo $(DEPDIR)/DblqhMain.Po
#	source='dblqh/DblqhMain.cpp' object='DblqhMain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DblqhMain.obj `if test -f 'dblqh/DblqhMain.cpp'; then $(CYGPATH_W) 'dblqh/DblqhMain.cpp'; else $(CYGPATH_W) '$(srcdir)/dblqh/DblqhMain.cpp'; fi`

DbtcInit.o: dbtc/DbtcInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtcInit.o -MD -MP -MF $(DEPDIR)/DbtcInit.Tpo -c -o DbtcInit.o `test -f 'dbtc/DbtcInit.cpp' || echo '$(srcdir)/'`dbtc/DbtcInit.cpp
	mv -f $(DEPDIR)/DbtcInit.Tpo $(DEPDIR)/DbtcInit.Po
#	source='dbtc/DbtcInit.cpp' object='DbtcInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtcInit.o `test -f 'dbtc/DbtcInit.cpp' || echo '$(srcdir)/'`dbtc/DbtcInit.cpp

DbtcInit.obj: dbtc/DbtcInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtcInit.obj -MD -MP -MF $(DEPDIR)/DbtcInit.Tpo -c -o DbtcInit.obj `if test -f 'dbtc/DbtcInit.cpp'; then $(CYGPATH_W) 'dbtc/DbtcInit.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtc/DbtcInit.cpp'; fi`
	mv -f $(DEPDIR)/DbtcInit.Tpo $(DEPDIR)/DbtcInit.Po
#	source='dbtc/DbtcInit.cpp' object='DbtcInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtcInit.obj `if test -f 'dbtc/DbtcInit.cpp'; then $(CYGPATH_W) 'dbtc/DbtcInit.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtc/DbtcInit.cpp'; fi`

DbtcMain.o: dbtc/DbtcMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtcMain.o -MD -MP -MF $(DEPDIR)/DbtcMain.Tpo -c -o DbtcMain.o `test -f 'dbtc/DbtcMain.cpp' || echo '$(srcdir)/'`dbtc/DbtcMain.cpp
	mv -f $(DEPDIR)/DbtcMain.Tpo $(DEPDIR)/DbtcMain.Po
#	source='dbtc/DbtcMain.cpp' object='DbtcMain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtcMain.o `test -f 'dbtc/DbtcMain.cpp' || echo '$(srcdir)/'`dbtc/DbtcMain.cpp

DbtcMain.obj: dbtc/DbtcMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtcMain.obj -MD -MP -MF $(DEPDIR)/DbtcMain.Tpo -c -o DbtcMain.obj `if test -f 'dbtc/DbtcMain.cpp'; then $(CYGPATH_W) 'dbtc/DbtcMain.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtc/DbtcMain.cpp'; fi`
	mv -f $(DEPDIR)/DbtcMain.Tpo $(DEPDIR)/DbtcMain.Po
#	source='dbtc/DbtcMain.cpp' object='DbtcMain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtcMain.obj `if test -f 'dbtc/DbtcMain.cpp'; then $(CYGPATH_W) 'dbtc/DbtcMain.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtc/DbtcMain.cpp'; fi`

DbtupExecQuery.o: dbtup/DbtupExecQuery.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupExecQuery.o -MD -MP -MF $(DEPDIR)/DbtupExecQuery.Tpo -c -o DbtupExecQuery.o `test -f 'dbtup/DbtupExecQuery.cpp' || echo '$(srcdir)/'`dbtup/DbtupExecQuery.cpp
	mv -f $(DEPDIR)/DbtupExecQuery.Tpo $(DEPDIR)/DbtupExecQuery.Po
#	source='dbtup/DbtupExecQuery.cpp' object='DbtupExecQuery.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupExecQuery.o `test -f 'dbtup/DbtupExecQuery.cpp' || echo '$(srcdir)/'`dbtup/DbtupExecQuery.cpp

DbtupExecQuery.obj: dbtup/DbtupExecQuery.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupExecQuery.obj -MD -MP -MF $(DEPDIR)/DbtupExecQuery.Tpo -c -o DbtupExecQuery.obj `if test -f 'dbtup/DbtupExecQuery.cpp'; then $(CYGPATH_W) 'dbtup/DbtupExecQuery.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupExecQuery.cpp'; fi`
	mv -f $(DEPDIR)/DbtupExecQuery.Tpo $(DEPDIR)/DbtupExecQuery.Po
#	source='dbtup/DbtupExecQuery.cpp' object='DbtupExecQuery.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupExecQuery.obj `if test -f 'dbtup/DbtupExecQuery.cpp'; then $(CYGPATH_W) 'dbtup/DbtupExecQuery.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupExecQuery.cpp'; fi`

DbtupBuffer.o: dbtup/DbtupBuffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupBuffer.o -MD -MP -MF $(DEPDIR)/DbtupBuffer.Tpo -c -o DbtupBuffer.o `test -f 'dbtup/DbtupBuffer.cpp' || echo '$(srcdir)/'`dbtup/DbtupBuffer.cpp
	mv -f $(DEPDIR)/DbtupBuffer.Tpo $(DEPDIR)/DbtupBuffer.Po
#	source='dbtup/DbtupBuffer.cpp' object='DbtupBuffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupBuffer.o `test -f 'dbtup/DbtupBuffer.cpp' || echo '$(srcdir)/'`dbtup/DbtupBuffer.cpp

DbtupBuffer.obj: dbtup/DbtupBuffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupBuffer.obj -MD -MP -MF $(DEPDIR)/DbtupBuffer.Tpo -c -o DbtupBuffer.obj `if test -f 'dbtup/DbtupBuffer.cpp'; then $(CYGPATH_W) 'dbtup/DbtupBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupBuffer.cpp'; fi`
	mv -f $(DEPDIR)/DbtupBuffer.Tpo $(DEPDIR)/DbtupBuffer.Po
#	source='dbtup/DbtupBuffer.cpp' object='DbtupBuffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupBuffer.obj `if test -f 'dbtup/DbtupBuffer.cpp'; then $(CYGPATH_W) 'dbtup/DbtupBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupBuffer.cpp'; fi`

DbtupRoutines.o: dbtup/DbtupRoutines.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupRoutines.o -MD -MP -MF $(DEPDIR)/DbtupRoutines.Tpo -c -o DbtupRoutines.o `test -f 'dbtup/DbtupRoutines.cpp' || echo '$(srcdir)/'`dbtup/DbtupRoutines.cpp
	mv -f $(DEPDIR)/DbtupRoutines.Tpo $(DEPDIR)/DbtupRoutines.Po
#	source='dbtup/DbtupRoutines.cpp' object='DbtupRoutines.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupRoutines.o `test -f 'dbtup/DbtupRoutines.cpp' || echo '$(srcdir)/'`dbtup/DbtupRoutines.cpp

DbtupRoutines.obj: dbtup/DbtupRoutines.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupRoutines.obj -MD -MP -MF $(DEPDIR)/DbtupRoutines.Tpo -c -o DbtupRoutines.obj `if test -f 'dbtup/DbtupRoutines.cpp'; then $(CYGPATH_W) 'dbtup/DbtupRoutines.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupRoutines.cpp'; fi`
	mv -f $(DEPDIR)/DbtupRoutines.Tpo $(DEPDIR)/DbtupRoutines.Po
#	source='dbtup/DbtupRoutines.cpp' object='DbtupRoutines.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupRoutines.obj `if test -f 'dbtup/DbtupRoutines.cpp'; then $(CYGPATH_W) 'dbtup/DbtupRoutines.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupRoutines.cpp'; fi`

DbtupCommit.o: dbtup/DbtupCommit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupCommit.o -MD -MP -MF $(DEPDIR)/DbtupCommit.Tpo -c -o DbtupCommit.o `test -f 'dbtup/DbtupCommit.cpp' || echo '$(srcdir)/'`dbtup/DbtupCommit.cpp
	mv -f $(DEPDIR)/DbtupCommit.Tpo $(DEPDIR)/DbtupCommit.Po
#	source='dbtup/DbtupCommit.cpp' object='DbtupCommit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupCommit.o `test -f 'dbtup/DbtupCommit.cpp' || echo '$(srcdir)/'`dbtup/DbtupCommit.cpp

DbtupCommit.obj: dbtup/DbtupCommit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupCommit.obj -MD -MP -MF $(DEPDIR)/DbtupCommit.Tpo -c -o DbtupCommit.obj `if test -f 'dbtup/DbtupCommit.cpp'; then $(CYGPATH_W) 'dbtup/DbtupCommit.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupCommit.cpp'; fi`
	mv -f $(DEPDIR)/DbtupCommit.Tpo $(DEPDIR)/DbtupCommit.Po
#	source='dbtup/DbtupCommit.cpp' object='DbtupCommit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupCommit.obj `if test -f 'dbtup/DbtupCommit.cpp'; then $(CYGPATH_W) 'dbtup/DbtupCommit.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupCommit.cpp'; fi`

DbtupFixAlloc.o: dbtup/DbtupFixAlloc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupFixAlloc.o -MD -MP -MF $(DEPDIR)/DbtupFixAlloc.Tpo -c -o DbtupFixAlloc.o `test -f 'dbtup/DbtupFixAlloc.cpp' || echo '$(srcdir)/'`dbtup/DbtupFixAlloc.cpp
	mv -f $(DEPDIR)/DbtupFixAlloc.Tpo $(DEPDIR)/DbtupFixAlloc.Po
#	source='dbtup/DbtupFixAlloc.cpp' object='DbtupFixAlloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupFixAlloc.o `test -f 'dbtup/DbtupFixAlloc.cpp' || echo '$(srcdir)/'`dbtup/DbtupFixAlloc.cpp

DbtupFixAlloc.obj: dbtup/DbtupFixAlloc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupFixAlloc.obj -MD -MP -MF $(DEPDIR)/DbtupFixAlloc.Tpo -c -o DbtupFixAlloc.obj `if test -f 'dbtup/DbtupFixAlloc.cpp'; then $(CYGPATH_W) 'dbtup/DbtupFixAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupFixAlloc.cpp'; fi`
	mv -f $(DEPDIR)/DbtupFixAlloc.Tpo $(DEPDIR)/DbtupFixAlloc.Po
#	source='dbtup/DbtupFixAlloc.cpp' object='DbtupFixAlloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupFixAlloc.obj `if test -f 'dbtup/DbtupFixAlloc.cpp'; then $(CYGPATH_W) 'dbtup/DbtupFixAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupFixAlloc.cpp'; fi`

DbtupTrigger.o: dbtup/DbtupTrigger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupTrigger.o -MD -MP -MF $(DEPDIR)/DbtupTrigger.Tpo -c -o DbtupTrigger.o `test -f 'dbtup/DbtupTrigger.cpp' || echo '$(srcdir)/'`dbtup/DbtupTrigger.cpp
	mv -f $(DEPDIR)/DbtupTrigger.Tpo $(DEPDIR)/DbtupTrigger.Po
#	source='dbtup/DbtupTrigger.cpp' object='DbtupTrigger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupTrigger.o `test -f 'dbtup/DbtupTrigger.cpp' || echo '$(srcdir)/'`dbtup/DbtupTrigger.cpp

DbtupTrigger.obj: dbtup/DbtupTrigger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupTrigger.obj -MD -MP -MF $(DEPDIR)/DbtupTrigger.Tpo -c -o DbtupTrigger.obj `if test -f 'dbtup/DbtupTrigger.cpp'; then $(CYGPATH_W) 'dbtup/DbtupTrigger.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupTrigger.cpp'; fi`
	mv -f $(DEPDIR)/DbtupTrigger.Tpo $(DEPDIR)/DbtupTrigger.Po
#	source='dbtup/DbtupTrigger.cpp' object='DbtupTrigger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupTrigger.obj `if test -f 'dbtup/DbtupTrigger.cpp'; then $(CYGPATH_W) 'dbtup/DbtupTrigger.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupTrigger.cpp'; fi`

DbtupAbort.o: dbtup/DbtupAbort.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupAbort.o -MD -MP -MF $(DEPDIR)/DbtupAbort.Tpo -c -o DbtupAbort.o `test -f 'dbtup/DbtupAbort.cpp' || echo '$(srcdir)/'`dbtup/DbtupAbort.cpp
	mv -f $(DEPDIR)/DbtupAbort.Tpo $(DEPDIR)/DbtupAbort.Po
#	source='dbtup/DbtupAbort.cpp' object='DbtupAbort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupAbort.o `test -f 'dbtup/DbtupAbort.cpp' || echo '$(srcdir)/'`dbtup/DbtupAbort.cpp

DbtupAbort.obj: dbtup/DbtupAbort.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupAbort.obj -MD -MP -MF $(DEPDIR)/DbtupAbort.Tpo -c -o DbtupAbort.obj `if test -f 'dbtup/DbtupAbort.cpp'; then $(CYGPATH_W) 'dbtup/DbtupAbort.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupAbort.cpp'; fi`
	mv -f $(DEPDIR)/DbtupAbort.Tpo $(DEPDIR)/DbtupAbort.Po
#	source='dbtup/DbtupAbort.cpp' object='DbtupAbort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupAbort.obj `if test -f 'dbtup/DbtupAbort.cpp'; then $(CYGPATH_W) 'dbtup/DbtupAbort.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupAbort.cpp'; fi`

DbtupPageMap.o: dbtup/DbtupPageMap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupPageMap.o -MD -MP -MF $(DEPDIR)/DbtupPageMap.Tpo -c -o DbtupPageMap.o `test -f 'dbtup/DbtupPageMap.cpp' || echo '$(srcdir)/'`dbtup/DbtupPageMap.cpp
	mv -f $(DEPDIR)/DbtupPageMap.Tpo $(DEPDIR)/DbtupPageMap.Po
#	source='dbtup/DbtupPageMap.cpp' object='DbtupPageMap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupPageMap.o `test -f 'dbtup/DbtupPageMap.cpp' || echo '$(srcdir)/'`dbtup/DbtupPageMap.cpp

DbtupPageMap.obj: dbtup/DbtupPageMap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupPageMap.obj -MD -MP -MF $(DEPDIR)/DbtupPageMap.Tpo -c -o DbtupPageMap.obj `if test -f 'dbtup/DbtupPageMap.cpp'; then $(CYGPATH_W) 'dbtup/DbtupPageMap.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupPageMap.cpp'; fi`
	mv -f $(DEPDIR)/DbtupPageMap.Tpo $(DEPDIR)/DbtupPageMap.Po
#	source='dbtup/DbtupPageMap.cpp' object='DbtupPageMap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupPageMap.obj `if test -f 'dbtup/DbtupPageMap.cpp'; then $(CYGPATH_W) 'dbtup/DbtupPageMap.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupPageMap.cpp'; fi`

DbtupPagMan.o: dbtup/DbtupPagMan.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupPagMan.o -MD -MP -MF $(DEPDIR)/DbtupPagMan.Tpo -c -o DbtupPagMan.o `test -f 'dbtup/DbtupPagMan.cpp' || echo '$(srcdir)/'`dbtup/DbtupPagMan.cpp
	mv -f $(DEPDIR)/DbtupPagMan.Tpo $(DEPDIR)/DbtupPagMan.Po
#	source='dbtup/DbtupPagMan.cpp' object='DbtupPagMan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupPagMan.o `test -f 'dbtup/DbtupPagMan.cpp' || echo '$(srcdir)/'`dbtup/DbtupPagMan.cpp

DbtupPagMan.obj: dbtup/DbtupPagMan.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupPagMan.obj -MD -MP -MF $(DEPDIR)/DbtupPagMan.Tpo -c -o DbtupPagMan.obj `if test -f 'dbtup/DbtupPagMan.cpp'; then $(CYGPATH_W) 'dbtup/DbtupPagMan.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupPagMan.cpp'; fi`
	mv -f $(DEPDIR)/DbtupPagMan.Tpo $(DEPDIR)/DbtupPagMan.Po
#	source='dbtup/DbtupPagMan.cpp' object='DbtupPagMan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupPagMan.obj `if test -f 'dbtup/DbtupPagMan.cpp'; then $(CYGPATH_W) 'dbtup/DbtupPagMan.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupPagMan.cpp'; fi`

DbtupStoredProcDef.o: dbtup/DbtupStoredProcDef.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupStoredProcDef.o -MD -MP -MF $(DEPDIR)/DbtupStoredProcDef.Tpo -c -o DbtupStoredProcDef.o `test -f 'dbtup/DbtupStoredProcDef.cpp' || echo '$(srcdir)/'`dbtup/DbtupStoredProcDef.cpp
	mv -f $(DEPDIR)/DbtupStoredProcDef.Tpo $(DEPDIR)/DbtupStoredProcDef.Po
#	source='dbtup/DbtupStoredProcDef.cpp' object='DbtupStoredProcDef.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupStoredProcDef.o `test -f 'dbtup/DbtupStoredProcDef.cpp' || echo '$(srcdir)/'`dbtup/DbtupStoredProcDef.cpp

DbtupStoredProcDef.obj: dbtup/DbtupStoredProcDef.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupStoredProcDef.obj -MD -MP -MF $(DEPDIR)/DbtupStoredProcDef.Tpo -c -o DbtupStoredProcDef.obj `if test -f 'dbtup/DbtupStoredProcDef.cpp'; then $(CYGPATH_W) 'dbtup/DbtupStoredProcDef.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupStoredProcDef.cpp'; fi`
	mv -f $(DEPDIR)/DbtupStoredProcDef.Tpo $(DEPDIR)/DbtupStoredProcDef.Po
#	source='dbtup/DbtupStoredProcDef.cpp' object='DbtupStoredProcDef.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupStoredProcDef.obj `if test -f 'dbtup/DbtupStoredProcDef.cpp'; then $(CYGPATH_W) 'dbtup/DbtupStoredProcDef.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupStoredProcDef.cpp'; fi`

DbtupMeta.o: dbtup/DbtupMeta.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupMeta.o -MD -MP -MF $(DEPDIR)/DbtupMeta.Tpo -c -o DbtupMeta.o `test -f 'dbtup/DbtupMeta.cpp' || echo '$(srcdir)/'`dbtup/DbtupMeta.cpp
	mv -f $(DEPDIR)/DbtupMeta.Tpo $(DEPDIR)/DbtupMeta.Po
#	source='dbtup/DbtupMeta.cpp' object='DbtupMeta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupMeta.o `test -f 'dbtup/DbtupMeta.cpp' || echo '$(srcdir)/'`dbtup/DbtupMeta.cpp

DbtupMeta.obj: dbtup/DbtupMeta.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupMeta.obj -MD -MP -MF $(DEPDIR)/DbtupMeta.Tpo -c -o DbtupMeta.obj `if test -f 'dbtup/DbtupMeta.cpp'; then $(CYGPATH_W) 'dbtup/DbtupMeta.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupMeta.cpp'; fi`
	mv -f $(DEPDIR)/DbtupMeta.Tpo $(DEPDIR)/DbtupMeta.Po
#	source='dbtup/DbtupMeta.cpp' object='DbtupMeta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupMeta.obj `if test -f 'dbtup/DbtupMeta.cpp'; then $(CYGPATH_W) 'dbtup/DbtupMeta.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupMeta.cpp'; fi`

DbtupTabDesMan.o: dbtup/DbtupTabDesMan.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupTabDesMan.o -MD -MP -MF $(DEPDIR)/DbtupTabDesMan.Tpo -c -o DbtupTabDesMan.o `test -f 'dbtup/DbtupTabDesMan.cpp' || echo '$(srcdir)/'`dbtup/DbtupTabDesMan.cpp
	mv -f $(DEPDIR)/DbtupTabDesMan.Tpo $(DEPDIR)/DbtupTabDesMan.Po
#	source='dbtup/DbtupTabDesMan.cpp' object='DbtupTabDesMan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupTabDesMan.o `test -f 'dbtup/DbtupTabDesMan.cpp' || echo '$(srcdir)/'`dbtup/DbtupTabDesMan.cpp

DbtupTabDesMan.obj: dbtup/DbtupTabDesMan.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupTabDesMan.obj -MD -MP -MF $(DEPDIR)/DbtupTabDesMan.Tpo -c -o DbtupTabDesMan.obj `if test -f 'dbtup/DbtupTabDesMan.cpp'; then $(CYGPATH_W) 'dbtup/DbtupTabDesMan.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupTabDesMan.cpp'; fi`
	mv -f $(DEPDIR)/DbtupTabDesMan.Tpo $(DEPDIR)/DbtupTabDesMan.Po
#	source='dbtup/DbtupTabDesMan.cpp' object='DbtupTabDesMan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupTabDesMan.obj `if test -f 'dbtup/DbtupTabDesMan.cpp'; then $(CYGPATH_W) 'dbtup/DbtupTabDesMan.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupTabDesMan.cpp'; fi`

DbtupGen.o: dbtup/DbtupGen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupGen.o -MD -MP -MF $(DEPDIR)/DbtupGen.Tpo -c -o DbtupGen.o `test -f 'dbtup/DbtupGen.cpp' || echo '$(srcdir)/'`dbtup/DbtupGen.cpp
	mv -f $(DEPDIR)/DbtupGen.Tpo $(DEPDIR)/DbtupGen.Po
#	source='dbtup/DbtupGen.cpp' object='DbtupGen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupGen.o `test -f 'dbtup/DbtupGen.cpp' || echo '$(srcdir)/'`dbtup/DbtupGen.cpp

DbtupGen.obj: dbtup/DbtupGen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupGen.obj -MD -MP -MF $(DEPDIR)/DbtupGen.Tpo -c -o DbtupGen.obj `if test -f 'dbtup/DbtupGen.cpp'; then $(CYGPATH_W) 'dbtup/DbtupGen.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupGen.cpp'; fi`
	mv -f $(DEPDIR)/DbtupGen.Tpo $(DEPDIR)/DbtupGen.Po
#	source='dbtup/DbtupGen.cpp' object='DbtupGen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupGen.obj `if test -f 'dbtup/DbtupGen.cpp'; then $(CYGPATH_W) 'dbtup/DbtupGen.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupGen.cpp'; fi`

DbtupIndex.o: dbtup/DbtupIndex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupIndex.o -MD -MP -MF $(DEPDIR)/DbtupIndex.Tpo -c -o DbtupIndex.o `test -f 'dbtup/DbtupIndex.cpp' || echo '$(srcdir)/'`dbtup/DbtupIndex.cpp
	mv -f $(DEPDIR)/DbtupIndex.Tpo $(DEPDIR)/DbtupIndex.Po
#	source='dbtup/DbtupIndex.cpp' object='DbtupIndex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupIndex.o `test -f 'dbtup/DbtupIndex.cpp' || echo '$(srcdir)/'`dbtup/DbtupIndex.cpp

DbtupIndex.obj: dbtup/DbtupIndex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupIndex.obj -MD -MP -MF $(DEPDIR)/DbtupIndex.Tpo -c -o DbtupIndex.obj `if test -f 'dbtup/DbtupIndex.cpp'; then $(CYGPATH_W) 'dbtup/DbtupIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupIndex.cpp'; fi`
	mv -f $(DEPDIR)/DbtupIndex.Tpo $(DEPDIR)/DbtupIndex.Po
#	source='dbtup/DbtupIndex.cpp' object='DbtupIndex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupIndex.obj `if test -f 'dbtup/DbtupIndex.cpp'; then $(CYGPATH_W) 'dbtup/DbtupIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupIndex.cpp'; fi`

DbtupDebug.o: dbtup/DbtupDebug.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupDebug.o -MD -MP -MF $(DEPDIR)/DbtupDebug.Tpo -c -o DbtupDebug.o `test -f 'dbtup/DbtupDebug.cpp' || echo '$(srcdir)/'`dbtup/DbtupDebug.cpp
	mv -f $(DEPDIR)/DbtupDebug.Tpo $(DEPDIR)/DbtupDebug.Po
#	source='dbtup/DbtupDebug.cpp' object='DbtupDebug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupDebug.o `test -f 'dbtup/DbtupDebug.cpp' || echo '$(srcdir)/'`dbtup/DbtupDebug.cpp

DbtupDebug.obj: dbtup/DbtupDebug.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupDebug.obj -MD -MP -MF $(DEPDIR)/DbtupDebug.Tpo -c -o DbtupDebug.obj `if test -f 'dbtup/DbtupDebug.cpp'; then $(CYGPATH_W) 'dbtup/DbtupDebug.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupDebug.cpp'; fi`
	mv -f $(DEPDIR)/DbtupDebug.Tpo $(DEPDIR)/DbtupDebug.Po
#	source='dbtup/DbtupDebug.cpp' object='DbtupDebug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupDebug.obj `if test -f 'dbtup/DbtupDebug.cpp'; then $(CYGPATH_W) 'dbtup/DbtupDebug.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupDebug.cpp'; fi`

DbtupScan.o: dbtup/DbtupScan.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupScan.o -MD -MP -MF $(DEPDIR)/DbtupScan.Tpo -c -o DbtupScan.o `test -f 'dbtup/DbtupScan.cpp' || echo '$(srcdir)/'`dbtup/DbtupScan.cpp
	mv -f $(DEPDIR)/DbtupScan.Tpo $(DEPDIR)/DbtupScan.Po
#	source='dbtup/DbtupScan.cpp' object='DbtupScan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupScan.o `test -f 'dbtup/DbtupScan.cpp' || echo '$(srcdir)/'`dbtup/DbtupScan.cpp

DbtupScan.obj: dbtup/DbtupScan.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupScan.obj -MD -MP -MF $(DEPDIR)/DbtupScan.Tpo -c -o DbtupScan.obj `if test -f 'dbtup/DbtupScan.cpp'; then $(CYGPATH_W) 'dbtup/DbtupScan.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupScan.cpp'; fi`
	mv -f $(DEPDIR)/DbtupScan.Tpo $(DEPDIR)/DbtupScan.Po
#	source='dbtup/DbtupScan.cpp' object='DbtupScan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupScan.obj `if test -f 'dbtup/DbtupScan.cpp'; then $(CYGPATH_W) 'dbtup/DbtupScan.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupScan.cpp'; fi`

DbtupDiskAlloc.o: dbtup/DbtupDiskAlloc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupDiskAlloc.o -MD -MP -MF $(DEPDIR)/DbtupDiskAlloc.Tpo -c -o DbtupDiskAlloc.o `test -f 'dbtup/DbtupDiskAlloc.cpp' || echo '$(srcdir)/'`dbtup/DbtupDiskAlloc.cpp
	mv -f $(DEPDIR)/DbtupDiskAlloc.Tpo $(DEPDIR)/DbtupDiskAlloc.Po
#	source='dbtup/DbtupDiskAlloc.cpp' object='DbtupDiskAlloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupDiskAlloc.o `test -f 'dbtup/DbtupDiskAlloc.cpp' || echo '$(srcdir)/'`dbtup/DbtupDiskAlloc.cpp

DbtupDiskAlloc.obj: dbtup/DbtupDiskAlloc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupDiskAlloc.obj -MD -MP -MF $(DEPDIR)/DbtupDiskAlloc.Tpo -c -o DbtupDiskAlloc.obj `if test -f 'dbtup/DbtupDiskAlloc.cpp'; then $(CYGPATH_W) 'dbtup/DbtupDiskAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupDiskAlloc.cpp'; fi`
	mv -f $(DEPDIR)/DbtupDiskAlloc.Tpo $(DEPDIR)/DbtupDiskAlloc.Po
#	source='dbtup/DbtupDiskAlloc.cpp' object='DbtupDiskAlloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupDiskAlloc.obj `if test -f 'dbtup/DbtupDiskAlloc.cpp'; then $(CYGPATH_W) 'dbtup/DbtupDiskAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupDiskAlloc.cpp'; fi`

DbtupVarAlloc.o: dbtup/DbtupVarAlloc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupVarAlloc.o -MD -MP -MF $(DEPDIR)/DbtupVarAlloc.Tpo -c -o DbtupVarAlloc.o `test -f 'dbtup/DbtupVarAlloc.cpp' || echo '$(srcdir)/'`dbtup/DbtupVarAlloc.cpp
	mv -f $(DEPDIR)/DbtupVarAlloc.Tpo $(DEPDIR)/DbtupVarAlloc.Po
#	source='dbtup/DbtupVarAlloc.cpp' object='DbtupVarAlloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupVarAlloc.o `test -f 'dbtup/DbtupVarAlloc.cpp' || echo '$(srcdir)/'`dbtup/DbtupVarAlloc.cpp

DbtupVarAlloc.obj: dbtup/DbtupVarAlloc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtupVarAlloc.obj -MD -MP -MF $(DEPDIR)/DbtupVarAlloc.Tpo -c -o DbtupVarAlloc.obj `if test -f 'dbtup/DbtupVarAlloc.cpp'; then $(CYGPATH_W) 'dbtup/DbtupVarAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupVarAlloc.cpp'; fi`
	mv -f $(DEPDIR)/DbtupVarAlloc.Tpo $(DEPDIR)/DbtupVarAlloc.Po
#	source='dbtup/DbtupVarAlloc.cpp' object='DbtupVarAlloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtupVarAlloc.obj `if test -f 'dbtup/DbtupVarAlloc.cpp'; then $(CYGPATH_W) 'dbtup/DbtupVarAlloc.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/DbtupVarAlloc.cpp'; fi`

tuppage.o: dbtup/tuppage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuppage.o -MD -MP -MF $(DEPDIR)/tuppage.Tpo -c -o tuppage.o `test -f 'dbtup/tuppage.cpp' || echo '$(srcdir)/'`dbtup/tuppage.cpp
	mv -f $(DEPDIR)/tuppage.Tpo $(DEPDIR)/tuppage.Po
#	source='dbtup/tuppage.cpp' object='tuppage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuppage.o `test -f 'dbtup/tuppage.cpp' || echo '$(srcdir)/'`dbtup/tuppage.cpp

tuppage.obj: dbtup/tuppage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuppage.obj -MD -MP -MF $(DEPDIR)/tuppage.Tpo -c -o tuppage.obj `if test -f 'dbtup/tuppage.cpp'; then $(CYGPATH_W) 'dbtup/tuppage.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/tuppage.cpp'; fi`
	mv -f $(DEPDIR)/tuppage.Tpo $(DEPDIR)/tuppage.Po
#	source='dbtup/tuppage.cpp' object='tuppage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuppage.obj `if test -f 'dbtup/tuppage.cpp'; then $(CYGPATH_W) 'dbtup/tuppage.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/tuppage.cpp'; fi`

Undo_buffer.o: dbtup/Undo_buffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Undo_buffer.o -MD -MP -MF $(DEPDIR)/Undo_buffer.Tpo -c -o Undo_buffer.o `test -f 'dbtup/Undo_buffer.cpp' || echo '$(srcdir)/'`dbtup/Undo_buffer.cpp
	mv -f $(DEPDIR)/Undo_buffer.Tpo $(DEPDIR)/Undo_buffer.Po
#	source='dbtup/Undo_buffer.cpp' object='Undo_buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Undo_buffer.o `test -f 'dbtup/Undo_buffer.cpp' || echo '$(srcdir)/'`dbtup/Undo_buffer.cpp

Undo_buffer.obj: dbtup/Undo_buffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Undo_buffer.obj -MD -MP -MF $(DEPDIR)/Undo_buffer.Tpo -c -o Undo_buffer.obj `if test -f 'dbtup/Undo_buffer.cpp'; then $(CYGPATH_W) 'dbtup/Undo_buffer.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/Undo_buffer.cpp'; fi`
	mv -f $(DEPDIR)/Undo_buffer.Tpo $(DEPDIR)/Undo_buffer.Po
#	source='dbtup/Undo_buffer.cpp' object='Undo_buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Undo_buffer.obj `if test -f 'dbtup/Undo_buffer.cpp'; then $(CYGPATH_W) 'dbtup/Undo_buffer.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtup/Undo_buffer.cpp'; fi`

AsyncFile.o: ndbfs/AsyncFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AsyncFile.o -MD -MP -MF $(DEPDIR)/AsyncFile.Tpo -c -o AsyncFile.o `test -f 'ndbfs/AsyncFile.cpp' || echo '$(srcdir)/'`ndbfs/AsyncFile.cpp
	mv -f $(DEPDIR)/AsyncFile.Tpo $(DEPDIR)/AsyncFile.Po
#	source='ndbfs/AsyncFile.cpp' object='AsyncFile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AsyncFile.o `test -f 'ndbfs/AsyncFile.cpp' || echo '$(srcdir)/'`ndbfs/AsyncFile.cpp

AsyncFile.obj: ndbfs/AsyncFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AsyncFile.obj -MD -MP -MF $(DEPDIR)/AsyncFile.Tpo -c -o AsyncFile.obj `if test -f 'ndbfs/AsyncFile.cpp'; then $(CYGPATH_W) 'ndbfs/AsyncFile.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/AsyncFile.cpp'; fi`
	mv -f $(DEPDIR)/AsyncFile.Tpo $(DEPDIR)/AsyncFile.Po
#	source='ndbfs/AsyncFile.cpp' object='AsyncFile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AsyncFile.obj `if test -f 'ndbfs/AsyncFile.cpp'; then $(CYGPATH_W) 'ndbfs/AsyncFile.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/AsyncFile.cpp'; fi`

Ndbfs.o: ndbfs/Ndbfs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ndbfs.o -MD -MP -MF $(DEPDIR)/Ndbfs.Tpo -c -o Ndbfs.o `test -f 'ndbfs/Ndbfs.cpp' || echo '$(srcdir)/'`ndbfs/Ndbfs.cpp
	mv -f $(DEPDIR)/Ndbfs.Tpo $(DEPDIR)/Ndbfs.Po
#	source='ndbfs/Ndbfs.cpp' object='Ndbfs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ndbfs.o `test -f 'ndbfs/Ndbfs.cpp' || echo '$(srcdir)/'`ndbfs/Ndbfs.cpp

Ndbfs.obj: ndbfs/Ndbfs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ndbfs.obj -MD -MP -MF $(DEPDIR)/Ndbfs.Tpo -c -o Ndbfs.obj `if test -f 'ndbfs/Ndbfs.cpp'; then $(CYGPATH_W) 'ndbfs/Ndbfs.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/Ndbfs.cpp'; fi`
	mv -f $(DEPDIR)/Ndbfs.Tpo $(DEPDIR)/Ndbfs.Po
#	source='ndbfs/Ndbfs.cpp' object='Ndbfs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ndbfs.obj `if test -f 'ndbfs/Ndbfs.cpp'; then $(CYGPATH_W) 'ndbfs/Ndbfs.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/Ndbfs.cpp'; fi`

VoidFs.o: ndbfs/VoidFs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VoidFs.o -MD -MP -MF $(DEPDIR)/VoidFs.Tpo -c -o VoidFs.o `test -f 'ndbfs/VoidFs.cpp' || echo '$(srcdir)/'`ndbfs/VoidFs.cpp
	mv -f $(DEPDIR)/VoidFs.Tpo $(DEPDIR)/VoidFs.Po
#	source='ndbfs/VoidFs.cpp' object='VoidFs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VoidFs.o `test -f 'ndbfs/VoidFs.cpp' || echo '$(srcdir)/'`ndbfs/VoidFs.cpp

VoidFs.obj: ndbfs/VoidFs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VoidFs.obj -MD -MP -MF $(DEPDIR)/VoidFs.Tpo -c -o VoidFs.obj `if test -f 'ndbfs/VoidFs.cpp'; then $(CYGPATH_W) 'ndbfs/VoidFs.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/VoidFs.cpp'; fi`
	mv -f $(DEPDIR)/VoidFs.Tpo $(DEPDIR)/VoidFs.Po
#	source='ndbfs/VoidFs.cpp' object='VoidFs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VoidFs.obj `if test -f 'ndbfs/VoidFs.cpp'; then $(CYGPATH_W) 'ndbfs/VoidFs.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/VoidFs.cpp'; fi`

Filename.o: ndbfs/Filename.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Filename.o -MD -MP -MF $(DEPDIR)/Filename.Tpo -c -o Filename.o `test -f 'ndbfs/Filename.cpp' || echo '$(srcdir)/'`ndbfs/Filename.cpp
	mv -f $(DEPDIR)/Filename.Tpo $(DEPDIR)/Filename.Po
#	source='ndbfs/Filename.cpp' object='Filename.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Filename.o `test -f 'ndbfs/Filename.cpp' || echo '$(srcdir)/'`ndbfs/Filename.cpp

Filename.obj: ndbfs/Filename.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Filename.obj -MD -MP -MF $(DEPDIR)/Filename.Tpo -c -o Filename.obj `if test -f 'ndbfs/Filename.cpp'; then $(CYGPATH_W) 'ndbfs/Filename.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/Filename.cpp'; fi`
	mv -f $(DEPDIR)/Filename.Tpo $(DEPDIR)/Filename.Po
#	source='ndbfs/Filename.cpp' object='Filename.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Filename.obj `if test -f 'ndbfs/Filename.cpp'; then $(CYGPATH_W) 'ndbfs/Filename.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/Filename.cpp'; fi`

CircularIndex.o: ndbfs/CircularIndex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CircularIndex.o -MD -MP -MF $(DEPDIR)/CircularIndex.Tpo -c -o CircularIndex.o `test -f 'ndbfs/CircularIndex.cpp' || echo '$(srcdir)/'`ndbfs/CircularIndex.cpp
	mv -f $(DEPDIR)/CircularIndex.Tpo $(DEPDIR)/CircularIndex.Po
#	source='ndbfs/CircularIndex.cpp' object='CircularIndex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CircularIndex.o `test -f 'ndbfs/CircularIndex.cpp' || echo '$(srcdir)/'`ndbfs/CircularIndex.cpp

CircularIndex.obj: ndbfs/CircularIndex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CircularIndex.obj -MD -MP -MF $(DEPDIR)/CircularIndex.Tpo -c -o CircularIndex.obj `if test -f 'ndbfs/CircularIndex.cpp'; then $(CYGPATH_W) 'ndbfs/CircularIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/CircularIndex.cpp'; fi`
	mv -f $(DEPDIR)/CircularIndex.Tpo $(DEPDIR)/CircularIndex.Po
#	source='ndbfs/CircularIndex.cpp' object='CircularIndex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CircularIndex.obj `if test -f 'ndbfs/CircularIndex.cpp'; then $(CYGPATH_W) 'ndbfs/CircularIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbfs/CircularIndex.cpp'; fi`

NdbcntrInit.o: ndbcntr/NdbcntrInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NdbcntrInit.o -MD -MP -MF $(DEPDIR)/NdbcntrInit.Tpo -c -o NdbcntrInit.o `test -f 'ndbcntr/NdbcntrInit.cpp' || echo '$(srcdir)/'`ndbcntr/NdbcntrInit.cpp
	mv -f $(DEPDIR)/NdbcntrInit.Tpo $(DEPDIR)/NdbcntrInit.Po
#	source='ndbcntr/NdbcntrInit.cpp' object='NdbcntrInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NdbcntrInit.o `test -f 'ndbcntr/NdbcntrInit.cpp' || echo '$(srcdir)/'`ndbcntr/NdbcntrInit.cpp

NdbcntrInit.obj: ndbcntr/NdbcntrInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NdbcntrInit.obj -MD -MP -MF $(DEPDIR)/NdbcntrInit.Tpo -c -o NdbcntrInit.obj `if test -f 'ndbcntr/NdbcntrInit.cpp'; then $(CYGPATH_W) 'ndbcntr/NdbcntrInit.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbcntr/NdbcntrInit.cpp'; fi`
	mv -f $(DEPDIR)/NdbcntrInit.Tpo $(DEPDIR)/NdbcntrInit.Po
#	source='ndbcntr/NdbcntrInit.cpp' object='NdbcntrInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NdbcntrInit.obj `if test -f 'ndbcntr/NdbcntrInit.cpp'; then $(CYGPATH_W) 'ndbcntr/NdbcntrInit.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbcntr/NdbcntrInit.cpp'; fi`

NdbcntrSysTable.o: ndbcntr/NdbcntrSysTable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NdbcntrSysTable.o -MD -MP -MF $(DEPDIR)/NdbcntrSysTable.Tpo -c -o NdbcntrSysTable.o `test -f 'ndbcntr/NdbcntrSysTable.cpp' || echo '$(srcdir)/'`ndbcntr/NdbcntrSysTable.cpp
	mv -f $(DEPDIR)/NdbcntrSysTable.Tpo $(DEPDIR)/NdbcntrSysTable.Po
#	source='ndbcntr/NdbcntrSysTable.cpp' object='NdbcntrSysTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NdbcntrSysTable.o `test -f 'ndbcntr/NdbcntrSysTable.cpp' || echo '$(srcdir)/'`ndbcntr/NdbcntrSysTable.cpp

NdbcntrSysTable.obj: ndbcntr/NdbcntrSysTable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NdbcntrSysTable.obj -MD -MP -MF $(DEPDIR)/NdbcntrSysTable.Tpo -c -o NdbcntrSysTable.obj `if test -f 'ndbcntr/NdbcntrSysTable.cpp'; then $(CYGPATH_W) 'ndbcntr/NdbcntrSysTable.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbcntr/NdbcntrSysTable.cpp'; fi`
	mv -f $(DEPDIR)/NdbcntrSysTable.Tpo $(DEPDIR)/NdbcntrSysTable.Po
#	source='ndbcntr/NdbcntrSysTable.cpp' object='NdbcntrSysTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NdbcntrSysTable.obj `if test -f 'ndbcntr/NdbcntrSysTable.cpp'; then $(CYGPATH_W) 'ndbcntr/NdbcntrSysTable.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbcntr/NdbcntrSysTable.cpp'; fi`

NdbcntrMain.o: ndbcntr/NdbcntrMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NdbcntrMain.o -MD -MP -MF $(DEPDIR)/NdbcntrMain.Tpo -c -o NdbcntrMain.o `test -f 'ndbcntr/NdbcntrMain.cpp' || echo '$(srcdir)/'`ndbcntr/NdbcntrMain.cpp
	mv -f $(DEPDIR)/NdbcntrMain.Tpo $(DEPDIR)/NdbcntrMain.Po
#	source='ndbcntr/NdbcntrMain.cpp' object='NdbcntrMain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NdbcntrMain.o `test -f 'ndbcntr/NdbcntrMain.cpp' || echo '$(srcdir)/'`ndbcntr/NdbcntrMain.cpp

NdbcntrMain.obj: ndbcntr/NdbcntrMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NdbcntrMain.obj -MD -MP -MF $(DEPDIR)/NdbcntrMain.Tpo -c -o NdbcntrMain.obj `if test -f 'ndbcntr/NdbcntrMain.cpp'; then $(CYGPATH_W) 'ndbcntr/NdbcntrMain.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbcntr/NdbcntrMain.cpp'; fi`
	mv -f $(DEPDIR)/NdbcntrMain.Tpo $(DEPDIR)/NdbcntrMain.Po
#	source='ndbcntr/NdbcntrMain.cpp' object='NdbcntrMain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NdbcntrMain.obj `if test -f 'ndbcntr/NdbcntrMain.cpp'; then $(CYGPATH_W) 'ndbcntr/NdbcntrMain.cpp'; else $(CYGPATH_W) '$(srcdir)/ndbcntr/NdbcntrMain.cpp'; fi`

QmgrInit.o: qmgr/QmgrInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT QmgrInit.o -MD -MP -MF $(DEPDIR)/QmgrInit.Tpo -c -o QmgrInit.o `test -f 'qmgr/QmgrInit.cpp' || echo '$(srcdir)/'`qmgr/QmgrInit.cpp
	mv -f $(DEPDIR)/QmgrInit.Tpo $(DEPDIR)/QmgrInit.Po
#	source='qmgr/QmgrInit.cpp' object='QmgrInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QmgrInit.o `test -f 'qmgr/QmgrInit.cpp' || echo '$(srcdir)/'`qmgr/QmgrInit.cpp

QmgrInit.obj: qmgr/QmgrInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT QmgrInit.obj -MD -MP -MF $(DEPDIR)/QmgrInit.Tpo -c -o QmgrInit.obj `if test -f 'qmgr/QmgrInit.cpp'; then $(CYGPATH_W) 'qmgr/QmgrInit.cpp'; else $(CYGPATH_W) '$(srcdir)/qmgr/QmgrInit.cpp'; fi`
	mv -f $(DEPDIR)/QmgrInit.Tpo $(DEPDIR)/QmgrInit.Po
#	source='qmgr/QmgrInit.cpp' object='QmgrInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QmgrInit.obj `if test -f 'qmgr/QmgrInit.cpp'; then $(CYGPATH_W) 'qmgr/QmgrInit.cpp'; else $(CYGPATH_W) '$(srcdir)/qmgr/QmgrInit.cpp'; fi`

QmgrMain.o: qmgr/QmgrMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT QmgrMain.o -MD -MP -MF $(DEPDIR)/QmgrMain.Tpo -c -o QmgrMain.o `test -f 'qmgr/QmgrMain.cpp' || echo '$(srcdir)/'`qmgr/QmgrMain.cpp
	mv -f $(DEPDIR)/QmgrMain.Tpo $(DEPDIR)/QmgrMain.Po
#	source='qmgr/QmgrMain.cpp' object='QmgrMain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QmgrMain.o `test -f 'qmgr/QmgrMain.cpp' || echo '$(srcdir)/'`qmgr/QmgrMain.cpp

QmgrMain.obj: qmgr/QmgrMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT QmgrMain.obj -MD -MP -MF $(DEPDIR)/QmgrMain.Tpo -c -o QmgrMain.obj `if test -f 'qmgr/QmgrMain.cpp'; then $(CYGPATH_W) 'qmgr/QmgrMain.cpp'; else $(CYGPATH_W) '$(srcdir)/qmgr/QmgrMain.cpp'; fi`
	mv -f $(DEPDIR)/QmgrMain.Tpo $(DEPDIR)/QmgrMain.Po
#	source='qmgr/QmgrMain.cpp' object='QmgrMain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QmgrMain.obj `if test -f 'qmgr/QmgrMain.cpp'; then $(CYGPATH_W) 'qmgr/QmgrMain.cpp'; else $(CYGPATH_W) '$(srcdir)/qmgr/QmgrMain.cpp'; fi`

Trix.o: trix/Trix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Trix.o -MD -MP -MF $(DEPDIR)/Trix.Tpo -c -o Trix.o `test -f 'trix/Trix.cpp' || echo '$(srcdir)/'`trix/Trix.cpp
	mv -f $(DEPDIR)/Trix.Tpo $(DEPDIR)/Trix.Po
#	source='trix/Trix.cpp' object='Trix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Trix.o `test -f 'trix/Trix.cpp' || echo '$(srcdir)/'`trix/Trix.cpp

Trix.obj: trix/Trix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Trix.obj -MD -MP -MF $(DEPDIR)/Trix.Tpo -c -o Trix.obj `if test -f 'trix/Trix.cpp'; then $(CYGPATH_W) 'trix/Trix.cpp'; else $(CYGPATH_W) '$(srcdir)/trix/Trix.cpp'; fi`
	mv -f $(DEPDIR)/Trix.Tpo $(DEPDIR)/Trix.Po
#	source='trix/Trix.cpp' object='Trix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Trix.obj `if test -f 'trix/Trix.cpp'; then $(CYGPATH_W) 'trix/Trix.cpp'; else $(CYGPATH_W) '$(srcdir)/trix/Trix.cpp'; fi`

Backup.o: backup/Backup.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Backup.o -MD -MP -MF $(DEPDIR)/Backup.Tpo -c -o Backup.o `test -f 'backup/Backup.cpp' || echo '$(srcdir)/'`backup/Backup.cpp
	mv -f $(DEPDIR)/Backup.Tpo $(DEPDIR)/Backup.Po
#	source='backup/Backup.cpp' object='Backup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Backup.o `test -f 'backup/Backup.cpp' || echo '$(srcdir)/'`backup/Backup.cpp

Backup.obj: backup/Backup.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Backup.obj -MD -MP -MF $(DEPDIR)/Backup.Tpo -c -o Backup.obj `if test -f 'backup/Backup.cpp'; then $(CYGPATH_W) 'backup/Backup.cpp'; else $(CYGPATH_W) '$(srcdir)/backup/Backup.cpp'; fi`
	mv -f $(DEPDIR)/Backup.Tpo $(DEPDIR)/Backup.Po
#	source='backup/Backup.cpp' object='Backup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Backup.obj `if test -f 'backup/Backup.cpp'; then $(CYGPATH_W) 'backup/Backup.cpp'; else $(CYGPATH_W) '$(srcdir)/backup/Backup.cpp'; fi`

BackupInit.o: backup/BackupInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BackupInit.o -MD -MP -MF $(DEPDIR)/BackupInit.Tpo -c -o BackupInit.o `test -f 'backup/BackupInit.cpp' || echo '$(srcdir)/'`backup/BackupInit.cpp
	mv -f $(DEPDIR)/BackupInit.Tpo $(DEPDIR)/BackupInit.Po
#	source='backup/BackupInit.cpp' object='BackupInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BackupInit.o `test -f 'backup/BackupInit.cpp' || echo '$(srcdir)/'`backup/BackupInit.cpp

BackupInit.obj: backup/BackupInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BackupInit.obj -MD -MP -MF $(DEPDIR)/BackupInit.Tpo -c -o BackupInit.obj `if test -f 'backup/BackupInit.cpp'; then $(CYGPATH_W) 'backup/BackupInit.cpp'; else $(CYGPATH_W) '$(srcdir)/backup/BackupInit.cpp'; fi`
	mv -f $(DEPDIR)/BackupInit.Tpo $(DEPDIR)/BackupInit.Po
#	source='backup/BackupInit.cpp' object='BackupInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BackupInit.obj `if test -f 'backup/BackupInit.cpp'; then $(CYGPATH_W) 'backup/BackupInit.cpp'; else $(CYGPATH_W) '$(srcdir)/backup/BackupInit.cpp'; fi`

DbUtil.o: dbutil/DbUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbUtil.o -MD -MP -MF $(DEPDIR)/DbUtil.Tpo -c -o DbUtil.o `test -f 'dbutil/DbUtil.cpp' || echo '$(srcdir)/'`dbutil/DbUtil.cpp
	mv -f $(DEPDIR)/DbUtil.Tpo $(DEPDIR)/DbUtil.Po
#	source='dbutil/DbUtil.cpp' object='DbUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbUtil.o `test -f 'dbutil/DbUtil.cpp' || echo '$(srcdir)/'`dbutil/DbUtil.cpp

DbUtil.obj: dbutil/DbUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbUtil.obj -MD -MP -MF $(DEPDIR)/DbUtil.Tpo -c -o DbUtil.obj `if test -f 'dbutil/DbUtil.cpp'; then $(CYGPATH_W) 'dbutil/DbUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/dbutil/DbUtil.cpp'; fi`
	mv -f $(DEPDIR)/DbUtil.Tpo $(DEPDIR)/DbUtil.Po
#	source='dbutil/DbUtil.cpp' object='DbUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbUtil.obj `if test -f 'dbutil/DbUtil.cpp'; then $(CYGPATH_W) 'dbutil/DbUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/dbutil/DbUtil.cpp'; fi`

Suma.o: suma/Suma.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Suma.o -MD -MP -MF $(DEPDIR)/Suma.Tpo -c -o Suma.o `test -f 'suma/Suma.cpp' || echo '$(srcdir)/'`suma/Suma.cpp
	mv -f $(DEPDIR)/Suma.Tpo $(DEPDIR)/Suma.Po
#	source='suma/Suma.cpp' object='Suma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Suma.o `test -f 'suma/Suma.cpp' || echo '$(srcdir)/'`suma/Suma.cpp

Suma.obj: suma/Suma.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Suma.obj -MD -MP -MF $(DEPDIR)/Suma.Tpo -c -o Suma.obj `if test -f 'suma/Suma.cpp'; then $(CYGPATH_W) 'suma/Suma.cpp'; else $(CYGPATH_W) '$(srcdir)/suma/Suma.cpp'; fi`
	mv -f $(DEPDIR)/Suma.Tpo $(DEPDIR)/Suma.Po
#	source='suma/Suma.cpp' object='Suma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Suma.obj `if test -f 'suma/Suma.cpp'; then $(CYGPATH_W) 'suma/Suma.cpp'; else $(CYGPATH_W) '$(srcdir)/suma/Suma.cpp'; fi`

SumaInit.o: suma/SumaInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SumaInit.o -MD -MP -MF $(DEPDIR)/SumaInit.Tpo -c -o SumaInit.o `test -f 'suma/SumaInit.cpp' || echo '$(srcdir)/'`suma/SumaInit.cpp
	mv -f $(DEPDIR)/SumaInit.Tpo $(DEPDIR)/SumaInit.Po
#	source='suma/SumaInit.cpp' object='SumaInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SumaInit.o `test -f 'suma/SumaInit.cpp' || echo '$(srcdir)/'`suma/SumaInit.cpp

SumaInit.obj: suma/SumaInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SumaInit.obj -MD -MP -MF $(DEPDIR)/SumaInit.Tpo -c -o SumaInit.obj `if test -f 'suma/SumaInit.cpp'; then $(CYGPATH_W) 'suma/SumaInit.cpp'; else $(CYGPATH_W) '$(srcdir)/suma/SumaInit.cpp'; fi`
	mv -f $(DEPDIR)/SumaInit.Tpo $(DEPDIR)/SumaInit.Po
#	source='suma/SumaInit.cpp' object='SumaInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SumaInit.obj `if test -f 'suma/SumaInit.cpp'; then $(CYGPATH_W) 'suma/SumaInit.cpp'; else $(CYGPATH_W) '$(srcdir)/suma/SumaInit.cpp'; fi`

DbtuxGen.o: dbtux/DbtuxGen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxGen.o -MD -MP -MF $(DEPDIR)/DbtuxGen.Tpo -c -o DbtuxGen.o `test -f 'dbtux/DbtuxGen.cpp' || echo '$(srcdir)/'`dbtux/DbtuxGen.cpp
	mv -f $(DEPDIR)/DbtuxGen.Tpo $(DEPDIR)/DbtuxGen.Po
#	source='dbtux/DbtuxGen.cpp' object='DbtuxGen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxGen.o `test -f 'dbtux/DbtuxGen.cpp' || echo '$(srcdir)/'`dbtux/DbtuxGen.cpp

DbtuxGen.obj: dbtux/DbtuxGen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxGen.obj -MD -MP -MF $(DEPDIR)/DbtuxGen.Tpo -c -o DbtuxGen.obj `if test -f 'dbtux/DbtuxGen.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxGen.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxGen.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxGen.Tpo $(DEPDIR)/DbtuxGen.Po
#	source='dbtux/DbtuxGen.cpp' object='DbtuxGen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxGen.obj `if test -f 'dbtux/DbtuxGen.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxGen.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxGen.cpp'; fi`

DbtuxMeta.o: dbtux/DbtuxMeta.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxMeta.o -MD -MP -MF $(DEPDIR)/DbtuxMeta.Tpo -c -o DbtuxMeta.o `test -f 'dbtux/DbtuxMeta.cpp' || echo '$(srcdir)/'`dbtux/DbtuxMeta.cpp
	mv -f $(DEPDIR)/DbtuxMeta.Tpo $(DEPDIR)/DbtuxMeta.Po
#	source='dbtux/DbtuxMeta.cpp' object='DbtuxMeta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxMeta.o `test -f 'dbtux/DbtuxMeta.cpp' || echo '$(srcdir)/'`dbtux/DbtuxMeta.cpp

DbtuxMeta.obj: dbtux/DbtuxMeta.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxMeta.obj -MD -MP -MF $(DEPDIR)/DbtuxMeta.Tpo -c -o DbtuxMeta.obj `if test -f 'dbtux/DbtuxMeta.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxMeta.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxMeta.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxMeta.Tpo $(DEPDIR)/DbtuxMeta.Po
#	source='dbtux/DbtuxMeta.cpp' object='DbtuxMeta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxMeta.obj `if test -f 'dbtux/DbtuxMeta.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxMeta.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxMeta.cpp'; fi`

DbtuxMaint.o: dbtux/DbtuxMaint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxMaint.o -MD -MP -MF $(DEPDIR)/DbtuxMaint.Tpo -c -o DbtuxMaint.o `test -f 'dbtux/DbtuxMaint.cpp' || echo '$(srcdir)/'`dbtux/DbtuxMaint.cpp
	mv -f $(DEPDIR)/DbtuxMaint.Tpo $(DEPDIR)/DbtuxMaint.Po
#	source='dbtux/DbtuxMaint.cpp' object='DbtuxMaint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxMaint.o `test -f 'dbtux/DbtuxMaint.cpp' || echo '$(srcdir)/'`dbtux/DbtuxMaint.cpp

DbtuxMaint.obj: dbtux/DbtuxMaint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxMaint.obj -MD -MP -MF $(DEPDIR)/DbtuxMaint.Tpo -c -o DbtuxMaint.obj `if test -f 'dbtux/DbtuxMaint.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxMaint.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxMaint.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxMaint.Tpo $(DEPDIR)/DbtuxMaint.Po
#	source='dbtux/DbtuxMaint.cpp' object='DbtuxMaint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxMaint.obj `if test -f 'dbtux/DbtuxMaint.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxMaint.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxMaint.cpp'; fi`

DbtuxNode.o: dbtux/DbtuxNode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxNode.o -MD -MP -MF $(DEPDIR)/DbtuxNode.Tpo -c -o DbtuxNode.o `test -f 'dbtux/DbtuxNode.cpp' || echo '$(srcdir)/'`dbtux/DbtuxNode.cpp
	mv -f $(DEPDIR)/DbtuxNode.Tpo $(DEPDIR)/DbtuxNode.Po
#	source='dbtux/DbtuxNode.cpp' object='DbtuxNode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxNode.o `test -f 'dbtux/DbtuxNode.cpp' || echo '$(srcdir)/'`dbtux/DbtuxNode.cpp

DbtuxNode.obj: dbtux/DbtuxNode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxNode.obj -MD -MP -MF $(DEPDIR)/DbtuxNode.Tpo -c -o DbtuxNode.obj `if test -f 'dbtux/DbtuxNode.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxNode.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxNode.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxNode.Tpo $(DEPDIR)/DbtuxNode.Po
#	source='dbtux/DbtuxNode.cpp' object='DbtuxNode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxNode.obj `if test -f 'dbtux/DbtuxNode.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxNode.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxNode.cpp'; fi`

DbtuxTree.o: dbtux/DbtuxTree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxTree.o -MD -MP -MF $(DEPDIR)/DbtuxTree.Tpo -c -o DbtuxTree.o `test -f 'dbtux/DbtuxTree.cpp' || echo '$(srcdir)/'`dbtux/DbtuxTree.cpp
	mv -f $(DEPDIR)/DbtuxTree.Tpo $(DEPDIR)/DbtuxTree.Po
#	source='dbtux/DbtuxTree.cpp' object='DbtuxTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxTree.o `test -f 'dbtux/DbtuxTree.cpp' || echo '$(srcdir)/'`dbtux/DbtuxTree.cpp

DbtuxTree.obj: dbtux/DbtuxTree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxTree.obj -MD -MP -MF $(DEPDIR)/DbtuxTree.Tpo -c -o DbtuxTree.obj `if test -f 'dbtux/DbtuxTree.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxTree.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxTree.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxTree.Tpo $(DEPDIR)/DbtuxTree.Po
#	source='dbtux/DbtuxTree.cpp' object='DbtuxTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxTree.obj `if test -f 'dbtux/DbtuxTree.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxTree.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxTree.cpp'; fi`

DbtuxScan.o: dbtux/DbtuxScan.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxScan.o -MD -MP -MF $(DEPDIR)/DbtuxScan.Tpo -c -o DbtuxScan.o `test -f 'dbtux/DbtuxScan.cpp' || echo '$(srcdir)/'`dbtux/DbtuxScan.cpp
	mv -f $(DEPDIR)/DbtuxScan.Tpo $(DEPDIR)/DbtuxScan.Po
#	source='dbtux/DbtuxScan.cpp' object='DbtuxScan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxScan.o `test -f 'dbtux/DbtuxScan.cpp' || echo '$(srcdir)/'`dbtux/DbtuxScan.cpp

DbtuxScan.obj: dbtux/DbtuxScan.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxScan.obj -MD -MP -MF $(DEPDIR)/DbtuxScan.Tpo -c -o DbtuxScan.obj `if test -f 'dbtux/DbtuxScan.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxScan.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxScan.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxScan.Tpo $(DEPDIR)/DbtuxScan.Po
#	source='dbtux/DbtuxScan.cpp' object='DbtuxScan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxScan.obj `if test -f 'dbtux/DbtuxScan.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxScan.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxScan.cpp'; fi`

DbtuxSearch.o: dbtux/DbtuxSearch.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxSearch.o -MD -MP -MF $(DEPDIR)/DbtuxSearch.Tpo -c -o DbtuxSearch.o `test -f 'dbtux/DbtuxSearch.cpp' || echo '$(srcdir)/'`dbtux/DbtuxSearch.cpp
	mv -f $(DEPDIR)/DbtuxSearch.Tpo $(DEPDIR)/DbtuxSearch.Po
#	source='dbtux/DbtuxSearch.cpp' object='DbtuxSearch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxSearch.o `test -f 'dbtux/DbtuxSearch.cpp' || echo '$(srcdir)/'`dbtux/DbtuxSearch.cpp

DbtuxSearch.obj: dbtux/DbtuxSearch.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxSearch.obj -MD -MP -MF $(DEPDIR)/DbtuxSearch.Tpo -c -o DbtuxSearch.obj `if test -f 'dbtux/DbtuxSearch.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxSearch.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxSearch.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxSearch.Tpo $(DEPDIR)/DbtuxSearch.Po
#	source='dbtux/DbtuxSearch.cpp' object='DbtuxSearch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxSearch.obj `if test -f 'dbtux/DbtuxSearch.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxSearch.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxSearch.cpp'; fi`

DbtuxCmp.o: dbtux/DbtuxCmp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxCmp.o -MD -MP -MF $(DEPDIR)/DbtuxCmp.Tpo -c -o DbtuxCmp.o `test -f 'dbtux/DbtuxCmp.cpp' || echo '$(srcdir)/'`dbtux/DbtuxCmp.cpp
	mv -f $(DEPDIR)/DbtuxCmp.Tpo $(DEPDIR)/DbtuxCmp.Po
#	source='dbtux/DbtuxCmp.cpp' object='DbtuxCmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxCmp.o `test -f 'dbtux/DbtuxCmp.cpp' || echo '$(srcdir)/'`dbtux/DbtuxCmp.cpp

DbtuxCmp.obj: dbtux/DbtuxCmp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxCmp.obj -MD -MP -MF $(DEPDIR)/DbtuxCmp.Tpo -c -o DbtuxCmp.obj `if test -f 'dbtux/DbtuxCmp.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxCmp.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxCmp.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxCmp.Tpo $(DEPDIR)/DbtuxCmp.Po
#	source='dbtux/DbtuxCmp.cpp' object='DbtuxCmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxCmp.obj `if test -f 'dbtux/DbtuxCmp.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxCmp.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxCmp.cpp'; fi`

DbtuxStat.o: dbtux/DbtuxStat.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxStat.o -MD -MP -MF $(DEPDIR)/DbtuxStat.Tpo -c -o DbtuxStat.o `test -f 'dbtux/DbtuxStat.cpp' || echo '$(srcdir)/'`dbtux/DbtuxStat.cpp
	mv -f $(DEPDIR)/DbtuxStat.Tpo $(DEPDIR)/DbtuxStat.Po
#	source='dbtux/DbtuxStat.cpp' object='DbtuxStat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxStat.o `test -f 'dbtux/DbtuxStat.cpp' || echo '$(srcdir)/'`dbtux/DbtuxStat.cpp

DbtuxStat.obj: dbtux/DbtuxStat.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxStat.obj -MD -MP -MF $(DEPDIR)/DbtuxStat.Tpo -c -o DbtuxStat.obj `if test -f 'dbtux/DbtuxStat.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxStat.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxStat.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxStat.Tpo $(DEPDIR)/DbtuxStat.Po
#	source='dbtux/DbtuxStat.cpp' object='DbtuxStat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxStat.obj `if test -f 'dbtux/DbtuxStat.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxStat.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxStat.cpp'; fi`

DbtuxDebug.o: dbtux/DbtuxDebug.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxDebug.o -MD -MP -MF $(DEPDIR)/DbtuxDebug.Tpo -c -o DbtuxDebug.o `test -f 'dbtux/DbtuxDebug.cpp' || echo '$(srcdir)/'`dbtux/DbtuxDebug.cpp
	mv -f $(DEPDIR)/DbtuxDebug.Tpo $(DEPDIR)/DbtuxDebug.Po
#	source='dbtux/DbtuxDebug.cpp' object='DbtuxDebug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxDebug.o `test -f 'dbtux/DbtuxDebug.cpp' || echo '$(srcdir)/'`dbtux/DbtuxDebug.cpp

DbtuxDebug.obj: dbtux/DbtuxDebug.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DbtuxDebug.obj -MD -MP -MF $(DEPDIR)/DbtuxDebug.Tpo -c -o DbtuxDebug.obj `if test -f 'dbtux/DbtuxDebug.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxDebug.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxDebug.cpp'; fi`
	mv -f $(DEPDIR)/DbtuxDebug.Tpo $(DEPDIR)/DbtuxDebug.Po
#	source='dbtux/DbtuxDebug.cpp' object='DbtuxDebug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DbtuxDebug.obj `if test -f 'dbtux/DbtuxDebug.cpp'; then $(CYGPATH_W) 'dbtux/DbtuxDebug.cpp'; else $(CYGPATH_W) '$(srcdir)/dbtux/DbtuxDebug.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-exec-am:

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic clean-libtool \
	clean-noinstLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am


#AM_LDFLAGS = @ndb_ldflags@

# Don't update the files from bitkeeper
%::SCCS/s.%

windoze-dsp:

# Don't update the files from bitkeeper
%::SCCS/s.%
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
