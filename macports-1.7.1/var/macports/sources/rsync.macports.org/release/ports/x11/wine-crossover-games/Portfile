# $Id: Portfile 48374 2009-03-20 03:29:43Z jeremyhu@macports.org $

PortSystem              1.0

name                    wine-crossover-games
version                 7.2.0
categories              x11
maintainers             jeremyhu openmaintainer
homepage                http://www.codeweavers.com/
platforms               darwin
distname                crossover-games-wine-src-${version}
worksrcdir              wine

build.target            depend all
use_parallel_build      yes
universal_variant       no

description \
    Wine Is Not an Emulator (1.1.12 with CodeWeavers Modifications)

long_description \
    Wine is an implementation of the Windows APIs on top of X11.  This version contains the Codeweavers patches for Crossover Games

master_sites \
    http://media.codeweavers.com/pub/crossover/source/

checksums           md5     7b65ed80f08dc318485c5efb9b752d1b \
                    sha1    b7af9900b7ac5a109c8a16534fb111b83bf20436 \
                    rmd160  128775713960b36a9e2783ee4163a9b140ddab01


depends_lib \
    port:expat \
    port:fontconfig \
    port:freetype \
    port:jpeg \
    port:libiconv \
    port:libxml2 \
    port:libxslt \
    port:ncurses \
    port:openssl \
    port:zlib \
    port:xorg-libsm \
    port:xorg-libXcursor \
    port:xorg-libXi \
    port:xorg-libXinerama \
    port:xorg-libXrandr \
    port:xorg-libXxf86vm \
    port:mesa

depends_build \
    port:pkgconfig

configure.ldflags-append \
    -framework CoreServices \
    -lz

pre-fetch {
    if { [string compare ${os.endian} "little"] != 0 } {
        return -code error "${name} only runs on little-endian computers, such as an Intel Mac."
    }
}

post-extract {
	system "cd ${workpath} && mv sources/wine ."
}

post-destroot {
    xinstall -d ${destroot}${prefix}/libexec/wine
    xinstall -m 755 ${filespath}/wine.in ${destroot}${prefix}/bin/wine
    reinplace s|@PREFIX@|${prefix}|g ${destroot}${prefix}/bin/wine
    reinplace s|@X11PREFIX@|${x11prefix}|g ${destroot}${prefix}/bin/wine
}

# AC_X_PATH blindly asks xmkmf where X11 is, and it always uses /usr/X11R6.
# This block helps us link correctly when we are +system_x11 and x11prefix
# is somewhere non-standard and should cause AC_X_PATH to let us setup our
# CPPFLAGS and LDFLAGS without interference
configure.args-append --x-include=${prefix}/include --x-lib=${prefix}/lib
pre-configure {
    if { ![file exists ${prefix}/lib/pkgconfig/x11.pc] } {
        configure.cppflags-append -I${x11prefix}/include
        configure.ldflags-append  -L${x11prefix}/lib
    }
}

