# $Id: Portfile 49600 2009-04-13 05:00:59Z ryandesign@macports.org $

PortSystem              1.0

name                    wine-devel
set my_name             wine
version                 1.1.19
categories              x11
maintainers             ryandesign jwa openmaintainer
homepage                http://www.winehq.com/
platforms               darwin
distname                ${my_name}-${version}
dist_subdir             ${my_name}
use_bzip2               yes
build.target            depend all
use_parallel_build      yes
universal_variant       no

description \
    Wine Is Not an Emulator

long_description \
    Wine is an implementation of the Windows APIs on top of X11.

master_sites \
    sourceforge:wine \
    http://ibiblio.org/pub/linux/system/emulators/wine/

checksums \
    md5     95957027df57eca2a6f4686204dfb33a \
    sha1    6f589cdd630d090839b941313748c8a70ad2c6f1 \
    rmd160  6775956f41c3f0204547dff7302d73e89aa445c3

depends_lib \
    port:expat \
    port:fontconfig \
    port:freetype \
    port:jpeg \
    port:libiconv \
    port:libxml2 \
    port:libxslt \
    port:ncurses \
    port:openssl \
    port:zlib \
    port:xorg-libsm \
    port:xorg-libXcursor \
    port:xorg-libXi \
    port:xorg-libXinerama \
    port:xorg-libXrandr \
    port:xorg-libXxf86vm \
    port:mesa

depends_build \
    port:pkgconfig

configure.ldflags-append \
    -framework CoreServices \
    -lz

pre-fetch {
    if { [string compare ${os.endian} "little"] != 0 } {
        return -code error "${name} only runs on little-endian computers, such as an Intel Mac."
    }
}

post-destroot {
    xinstall -d ${destroot}${prefix}/libexec/wine
    file rename ${destroot}${prefix}/bin/wine ${destroot}${prefix}/libexec/wine/wine
    xinstall -m 755 ${filespath}/wine.in ${destroot}${prefix}/bin/wine
    reinplace s|@PREFIX@|${prefix}|g ${destroot}${prefix}/bin/wine
    reinplace s|@X11PREFIX@|${x11prefix}|g ${destroot}${prefix}/bin/wine
}

# AC_X_PATH blindly asks xmkmf where X11 is, and it always uses /usr/X11R6.
# This block helps us link correctly when we are +system_x11 and x11prefix
# is somewhere non-standard and should cause AC_X_PATH to let us setup our
# CPPFLAGS and LDFLAGS without interference
configure.args-append --x-include=${prefix}/include --x-lib=${prefix}/lib
pre-configure {
    if { ![file exists ${prefix}/lib/pkgconfig/x11.pc] } {
        configure.cppflags-append -I${x11prefix}/include
        configure.ldflags-append  -L${x11prefix}/lib
    }
}

livecheck.name          ${my_name}
livecheck.check         sourceforge
livecheck.regex         "<title>Source Packages (\[0-9\]+\\.\[0-9\]*\[13579\](\\.\[0-9\]+)*) released.*</title>"
