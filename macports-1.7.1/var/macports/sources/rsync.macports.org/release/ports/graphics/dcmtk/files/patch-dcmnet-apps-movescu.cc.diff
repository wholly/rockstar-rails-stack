--- dcmnet/apps/movescu.cc.orig	2005-12-08 16:44:20.000000000 +0100
+++ dcmnet/apps/movescu.cc	2007-10-19 12:59:25.000000000 +0200
@@ -21,10 +21,10 @@
  *
  *  Purpose: Query/Retrieve Service Class User (C-MOVE operation)
  *
- *  Last Update:      $Author: meichel $
- *  Update Date:      $Date: 2005/12/08 15:44:20 $
+ *  Last Update:      $Author: onken $
+ *  Update Date:      $Date: 2006/01/17 15:38:50 $
  *  Source File:      $Source: /share/dicom/cvs-depot/dcmtk/dcmnet/apps/movescu.cc,v $
- *  CVS/RCS Revision: $Revision: 1.59 $
+ *  CVS/RCS Revision: $Revision: 1.60 $
  *  Status:           $State: Exp $
  *
  *  CVS/RCS Log at end of file
@@ -148,17 +148,29 @@
     unsigned int e = 0xffff;
     int n = 0;
     char val[1024];
+    OFString dicName, valStr;
     OFString msg;
     char msg2[200];
-
     val[0] = '\0';
-    n = sscanf(s, "%x,%x=%s", &g, &e, val);
 
-    if (n != 2) {
-      // not a group-element pair, try to lookup in dictionary
+    // try to parse group and element number
+    n = sscanf(s, "%x,%x=%s", &g, &e, val);
+    OFString toParse = s;
+    size_t eqPos = toParse.find('=');
+    if (n < 2)  // if at least no tag could be parsed
+    { 
+      // if value is given, extract it (and extrect dictname)
+      if (eqPos != OFString_npos)
+      {
+        dicName = toParse.substr(0,eqPos).c_str();
+        valStr = toParse.substr(eqPos+1,toParse.length());
+      }
+      else // no value given, just dictionary name
+        dicName = s; // only dictionary name given (without value)
+      // try to lookup in dictionary
       DcmTagKey key(0xffff,0xffff);
       const DcmDataDictionary& globalDataDict = dcmDataDict.rdlock();
-      const DcmDictEntry *dicent = globalDataDict.findEntry(s);
+      const DcmDictEntry *dicent = globalDataDict.findEntry(dicName.c_str());
       dcmDataDict.unlock();
       if (dicent!=NULL) {
         // found dictionary name, copy group and element number
@@ -168,25 +180,16 @@
       }
       else {
         // not found in dictionary
-        msg = "bad key format or key not found in dictionary: ";
-        msg += s;
+        msg = "bad key format or dictionary name not found in dictionary: ";
+        msg += dicName;
         app.printError(msg.c_str());
       }
+    } // tag could be parsed, copy value if it exists
+    else
+    {
+      if (eqPos != OFString_npos)
+        valStr = toParse.substr(eqPos+1,toParse.length());
     }
-    const char* spos = s;
-    char ccc;
-    do
-    {
-      ccc = *spos;
-      if (ccc == '=') break;
-      if (ccc == 0) { spos = NULL; break; }
-      spos++;
-    } while(1);
-
-    if (spos && *(spos+1)) {
-        strcpy(val, spos+1);
-    }
-
     DcmTag tag(g,e);
     if (tag.error() != EC_Normal) {
         sprintf(msg2, "unknown tag: (%04x,%04x)", g, e);
@@ -197,21 +200,19 @@
         sprintf(msg2, "cannot create element for tag: (%04x,%04x)", g, e);
         app.printError(msg2);
     }
-    if (strlen(val) > 0) {
-        elem->putString(val);
-        if (elem->error() != EC_Normal)
+    if (valStr.length() > 0) {
+        if (elem->putString(valStr.c_str()).bad())
         {
             sprintf(msg2, "cannot put tag value: (%04x,%04x)=\"", g, e);
             msg = msg2;
-            msg += val;
+            msg += valStr;
             msg += "\"";
             app.printError(msg.c_str());
         }
     }
 
     if (overrideKeys == NULL) overrideKeys = new DcmDataset;
-    overrideKeys->insert(elem, OFTrue);
-    if (overrideKeys->error() != EC_Normal) {
+    if (overrideKeys->insert(elem, OFTrue).bad()) {
         sprintf(msg2, "cannot insert tag: (%04x,%04x)", g, e);
         app.printError(msg2);
     }
@@ -1407,6 +1408,10 @@
 ** CVS Log
 **
 ** $Log: movescu.cc,v $
+** Revision 1.60  2006/01/17 15:38:50  onken
+** Fixed "--key" option, which was broken when using the optional assignment ("=")
+** operation inside the option value
+**
 ** Revision 1.59  2005/12/08 15:44:20  meichel
 ** Changed include path schema for all DCMTK header files
 **
