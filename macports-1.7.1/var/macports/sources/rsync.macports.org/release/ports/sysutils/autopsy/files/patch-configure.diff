--- configure.orig	2007-07-18 19:32:24.000000000 -0400
+++ configure	2007-07-18 20:12:02.000000000 -0400
@@ -79,28 +79,29 @@
 # If it wasn't found, then prompt for it.
 if (test $found -eq 0) then
   echo 'ERROR: perl not found or the incorrect version found';
-  while (test 1 -eq 1) 
-    do echo 'Enter location of perl executable:';
-    read perlexe;
-    if (test -x "$perlexe") then
-      if (test -n "`$perlexe -v 2> /dev/null | awk '/This is perl/ {print $0}'`")       then
-        ver=`$perlexe -v 2> /dev/null | awk '/This is perl,/ {print $4}'`;
-        if (test "$ver" '<' "v5.8.0") then 
-          echo "This version of Perl is too old, 5.8.0 or older needed";
-        else	  
-          echo "Correct version found";
-          echo "#!${d}perl -wT" > ./config.tmp;
-          echo "#!${d}perl" > ./config2.tmp;
-          found=1; 
-          break; 
-        fi;
-      else
-        echo "Perl found, but is not working.  Try another";
-      fi;
-    else
-      echo "file not found";
-    fi
-  done
+  exit 1;
+#  while (test 1 -eq 1) 
+#    do echo 'Enter location of perl executable:';
+#    read perlexe;
+#    if (test -x "$perlexe") then
+#      if (test -n "`$perlexe -v 2> /dev/null | awk '/This is perl/ {print $0}'`")       then
+#        ver=`$perlexe -v 2> /dev/null | awk '/This is perl,/ {print $4}'`;
+#        if (test "$ver" '<' "v5.8.0") then 
+#          echo "This version of Perl is too old, 5.8.0 or older needed";
+#        else	  
+#          echo "Correct version found";
+#          echo "#!${d}perl -wT" > ./config.tmp;
+#          echo "#!${d}perl" > ./config2.tmp;
+#          found=1; 
+#          break; 
+#        fi;
+#      else
+#        echo "Perl found, but is not working.  Try another";
+#      fi;
+#    else
+#      echo "file not found";
+#    fi
+#  done
 fi
 
 # Check if this version of Perl supports large files
@@ -109,9 +110,9 @@
   echo '    NOTE: It appears that your Perl does not support large files.';
   echo '    You therefore will not be able to analyze images larger than 2GB.';
   echo '    Download the source version from www.cpan.org and compile a new version.';
-  echo "  [Press Enter to Continue]";
-  read foo;
-  echo ''
+#  echo "  [Press Enter to Continue]";
+#  read foo;
+#  echo ''
 fi;
 
 # Get current working directory for lib
@@ -239,19 +240,19 @@
 done
 
 # Prompt if not found
-if (test $found -eq 0) then
-  echo 'ERROR: grep utility not found';
-  echo 'Enter location of executable:';
-  while (test 1 -eq 1) 
-    do read grepexe;
-    if (test -x "$grepexe") then
-	  echo \$GREP_EXE = \'$grepexe\'\; >> $conf; 
-      break;
-    else
-      echo 'grep was not found (try again):';
-    fi;
-  done
-fi
+#if (test $found -eq 0) then
+#  echo 'ERROR: grep utility not found';
+#  echo 'Enter location of executable:';
+#  while (test 1 -eq 1) 
+#    do read grepexe;
+#    if (test -x "$grepexe") then
+#	  echo \$GREP_EXE = \'$grepexe\'\; >> $conf; 
+#      break;
+#    else
+#      echo 'grep was not found (try again):';
+#    fi;
+#  done
+#fi
 
 
 
@@ -270,26 +271,30 @@
 echo 'Autopsy uses forensic tools from The Sleuth Kit.' 
 echo '          http://www.sleuthkit.org/sleuthkit/'
 echo ''
-echo 'Enter the directory where you installed it:'
-while (test 1 -eq 1) 
-  do read tskdir;
-  if (test -x "${tskdir}/bin/icat") then
-    if (test -x "${tskdir}/bin/fls") then
+#echo 'Enter the directory where you installed it:'
+#while (test 1 -eq 1) 
+#  do read tskdir;
+#  if (test -x "${tskdir}/bin/icat") then
+#    if (test -x "${tskdir}/bin/fls") then
+#      echo '  Sleuth Kit bin directory was found';
+#      echo \$TSKDIR = \'${tskdir}/bin\'\; >> $conf;
+#      break;
+#    else
+#      echo 'The Sleuth Kit was not fully found (did you give me a TCT or TASK directory?) (try again):';
+#    fi
+#  else
+#    echo 'The Sleuth Kit was not found (try again):';
+#  fi;
+#done
+found=0
+for d in $dirs
+  do if (test -x ${d}icat) then
+    if (test -x ${d}fls) then
       echo '  Sleuth Kit bin directory was found';
-      echo \$TSKDIR = \'${tskdir}/bin\'\; >> $conf;
-      break;
-    else
-      echo 'The Sleuth Kit was not fully found (did you give me a TCT or TASK directory?) (try again):';
-    fi
-  else
-    echo 'The Sleuth Kit was not found (try again):';
-  fi;
-done
-
-
+      echo \$TSKDIR = \'${d}\'\; >> $conf;
 # Test for latest version
 
-ver=`"${tskdir}/bin/fls" -V | awk '/The Sleuth Kit ver / {print $5}'`;
+      ver=`"${d}fls" -V | awk '/The Sleuth Kit ver / {print $5}'`;
 echo "  Version $ver found";
 
 
@@ -299,19 +304,20 @@
 elif (test "$ver" '<' "$curtskver") then 
 	echo '';
     echo "*** NOTE: A more recent version ($curtskver) of The Sleuth Kit Exists ***"
-	echo "  [Press Enter to Continue]";
-	read foo;
-
 else
 	echo '  Required version found';
 fi
+      break;
+    fi;
+  fi;
+done
 
 
 # Check that file exists in TSK and if not then use the local
 # version
-if (test -x "${tskdir}/bin/file") then
-  echo \$FILE_EXE = \'${tskdir}/bin/file\'\; >> $conf; 
-else
+#if (test -x "${tskdir}/bin/file") then
+#  echo \$FILE_EXE = \'${tskdir}/bin/file\'\; >> $conf; 
+#else
 
 echo ''
 echo '---------------------------------------------------------------'
@@ -329,20 +335,20 @@
 done
 
 # Prompt if not found
-if (test $found -eq 0) then
-  echo 'ERROR: file utility not found';
-  echo 'Enter location of executable:';
-  while (test 1 -eq 1) 
-    do read fileexe;
-    if (test -x "$fileexe") then
-	  echo \$FILE_EXE = \'$fileexe\'\; >> $conf; 
-      break;
-    else
-      echo 'file was not found (try again):';
-    fi;
-  done
-fi
-fi
+#if (test $found -eq 0) then
+#  echo 'ERROR: file utility not found';
+#  echo 'Enter location of executable:';
+#  while (test 1 -eq 1) 
+#    do read fileexe;
+#    if (test -x "$fileexe") then
+#	  echo \$FILE_EXE = \'$fileexe\'\; >> $conf; 
+#      break;
+#    else
+#      echo 'file was not found (try again):';
+#    fi;
+#  done
+#fi
+#fi
 
 
 # NSRL
@@ -353,43 +359,43 @@
 echo 'hash values of known good and bad files.'
 echo '         http://www.nsrl.nist.gov'
 echo ''
-echo 'Have you purchased or downloaded a copy of the NSRL (y/n) [n]'
-read rep;
-if (test "$rep" = "y") then
-
-  echo 'Enter the directory where you installed it:'
-  while (test 1 -eq 1) 
-    do read nsrldir;
-    if (test "$nsrldir" = "cancel") then
-        echo \$NSRLDB = \'\'\; >> $conf;
-		break;
-	fi;
-    if (test -f "${nsrldir}/NSRLFile.txt") then
-      echo '  NSRL database was found (NSRLFile.txt)';
-      echo \$NSRLDB = \'${nsrldir}/NSRLFile.txt\'\; >> $conf;
-
-	  if (test -f "${nsrldir}/NSRLFile.txt-md5.idx") then
-		echo '  NSRL Index file found (NSRLFile.txt-md5.idx)';
-      else
-        echo '  NSRL Index file not found, do you want it created? (y/n) [n]:'
-        read rep;
-        if (test "$rep" = "y") then
-          echo ''
-          echo '-------------- begin hfind output --------------'
-          "${tskdir}/bin/hfind" -i nsrl-md5 "${nsrldir}/NSRLFile.txt";
-          echo '--------------- end hfind output ---------------'
-          echo ''
-		fi;
-	  fi;
-      break;
-    else
-      echo 'The NSRL was not found (the directory should have NSRLFile.txt in it)';
-	  echo 'Enter a new directory (or cancel to stop):';
-    fi;
-  done
-else
+#echo 'Have you purchased or downloaded a copy of the NSRL (y/n) [n]'
+#read rep;
+#if (test "$rep" = "y") then
+#
+#  echo 'Enter the directory where you installed it:'
+#  while (test 1 -eq 1) 
+#    do read nsrldir;
+#    if (test "$nsrldir" = "cancel") then
+#        echo \$NSRLDB = \'\'\; >> $conf;
+#		break;
+#	fi;
+#    if (test -f "${nsrldir}/NSRLFile.txt") then
+#      echo '  NSRL database was found (NSRLFile.txt)';
+#      echo \$NSRLDB = \'${nsrldir}/NSRLFile.txt\'\; >> $conf;
+#
+#	  if (test -f "${nsrldir}/NSRLFile.txt-md5.idx") then
+#		echo '  NSRL Index file found (NSRLFile.txt-md5.idx)';
+#      else
+#        echo '  NSRL Index file not found, do you want it created? (y/n) [n]:'
+#        read rep;
+#        if (test "$rep" = "y") then
+#          echo ''
+#          echo '-------------- begin hfind output --------------'
+#          "${tskdir}/bin/hfind" -i nsrl-md5 "${nsrldir}/NSRLFile.txt";
+#          echo '--------------- end hfind output ---------------'
+#          echo ''
+#		fi;
+#	  fi;
+#      break;
+#    else
+#      echo 'The NSRL was not found (the directory should have NSRLFile.txt in it)';
+#	  echo 'Enter a new directory (or cancel to stop):';
+#    fi;
+#  done
+#else
   echo \$NSRLDB = \'\'\; >> $conf;
-fi;
+#fi;
 
 #############################################################################
 # EVIDENCE LOCKER
@@ -402,7 +408,8 @@
 echo 'Evidence Locker directory.'
 echo ''
 echo 'Enter the directory that you want to use for the Evidence Locker:';
-read locker;
+#read locker;
+locker='MP_AUTOPSY_LOCKER'
 if (test -d "${locker}") then
   echo "  $locker already exists"
 else
