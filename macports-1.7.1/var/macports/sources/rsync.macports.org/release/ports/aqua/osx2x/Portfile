# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 47558 2009-03-01 00:55:14Z ryandesign@macports.org $

PortSystem      1.0
PortGroup       xcode 1.0

name            osx2x
version         2.4.0
revision        2
set git_hash    3cc708236898ab789bb99a5fba7420ff76ede9f7
platforms       darwin
maintainers     nomaintainer
description     small Aqua application to control X11 servers from Mac OS X

long_description \
    osx2x is a small Mac OS X application that lets you \
    control other machines running either an X11 server \
    or a VNC server using your mac's mouse and keyboard. \
    So if you happen to have a mac and either an X \
    Windows machine or a machine running VNC on your \
    desk you only need to use a single keyboard and \
    mouse!

homepage        http://homepage.mac.com/mdales/osx2x/
master_sites    http://arn.se.distfiles.macports.org/${dist_subdir}
#master_sites    http://github.com/mdales/osx2x/tarball/${git_hash}
distname        $name-2.4

worksrcdir      mdales-${name}-${git_hash}

checksums \
    md5     897cf872c4006d4173b3c6ff046b0c44 \
    sha1    1014e0ac22b0c00b47dde2b0f7f44eaa676acc7e \
    rmd160  cc2a63b9dbfd9485c039fc989bbab96e6cf919ac

patchfiles      patch-osx2x.xcodeproj.diff \
                patch-XXRemoteVNC.m.diff

post-patch {
    reinplace s|@PREFIX@|$prefix| $worksrcpath/osx2x.xcodeproj/project.pbxproj
    if {[file exists ${prefix}/lib/libX11.dylib]} {
        reinplace s|@X11_PREFIX@|$prefix| $worksrcpath/osx2x.xcodeproj/project.pbxproj
    } else {
        reinplace s|@X11_PREFIX@|$x11prefix| $worksrcpath/osx2x.xcodeproj/project.pbxproj
    }
}

depends_lib     port:xorg-libXtst \
                port:openssl

set library_search_path "LIBRARY_SEARCH_PATHS='$prefix/lib $x11prefix/lib'"

eval xcode.build.settings-append        $library_search_path
eval xcode.destroot.settings-append     $library_search_path

post-destroot {
    xinstall -d $destroot${applications_dir}
    copy $worksrcpath/build/UninstalledProducts/osx2x.app $destroot${applications_dir}/
}

variant universal {
    eval xcode.build.settings-append        "ARCHS='${configure.universal_archs}'"
    eval xcode.destroot.settings-append     "ARCHS='${configure.universal_archs}'"
}

livecheck.check regex
livecheck.regex {Latest version: (\d+(?:\.\d+)*)}
