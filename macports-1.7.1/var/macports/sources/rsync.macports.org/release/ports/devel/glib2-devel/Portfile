# $Id: Portfile 49467 2009-04-10 12:32:07Z ryandesign@macports.org $

PortSystem              1.0
PortGroup               muniversal 1.0

name                    glib2-devel
set my_name             glib
version                 2.19.6
revision                1
set branch              [join [lrange [split ${version} .] 0 1] .]
categories              devel
maintainers             ryandesign
homepage                http://www.gtk.org/
platforms               darwin
dist_subdir             glib2
distname                ${my_name}-${version}
use_bzip2               yes
use_parallel_build      yes

description \
    Library with data structure functions and other constructs

long_description \
    Glib is a library which includes support routines for \
    C, such as lists, trees, hashes, memory allocation, and \
    many other things.

master_sites \
    gnome:sources/${my_name}/${branch}/ \
    ftp://ftp.gtk.org/pub/${my_name}/${branch}/

checksums \
    md5     d78ebdcb6a9bbd7cce1f396501037f9b \
    sha1    6b39ba2b1d702ada6da900410d2ef99191c5efe1 \
    rmd160  47b58160f6ada1cfe75a723778400a8aee7f3c0b

patchfiles \
    patch-glib-2.0.pc.in.diff \
    patch-gutils.c.diff \
    patch-gi18n.h.diff \
    patch-gio_xdgmime_xdgmime.c.diff \
    patch-which.diff

depends_build \
    port:pkgconfig

depends_lib \
    port:gettext \
    port:libiconv \
    path:bin/perl:perl5 \
    bin:python:python_select

configure.ldflags-append \
    -bind_at_load

configure.cflags-append \
    -fstrict-aliasing

configure.args \
    --enable-static

configure.perl    ${prefix}/bin/perl
configure.env-append  PERL_PATH=${configure.perl}

set merger_dont_diff ${prefix}/lib/glib-2.0/include/glibconfig.h
if {[variant_isset universal]} {
    # Answers to questions configure can't determine without running a program.
    configure.args-append       --config-cache
    # So it will find glib-genmarshal when cross-compiling.
    if {"powerpc" == ${os.arch}} {
        set build_arch ppc
    } else {
        set build_arch ${os.arch}
    }
    configure.env-append        PATH=${workpath}/${build_arch}/gobject:$env(PATH)
    build.env-append            PATH=${workpath}/${build_arch}/gobject:$env(PATH)
    pre-extract {
        # ${workpath}/${build_arch}/gobject/glib-genmarshal must exist before a
        # cross-compiled configure phase runs, so ${build_arch} must be configured
        # first.
        if {${build_arch} != [lindex ${universal_archs} 0]} {
            ui_error "When building a universal binary of ${name} on ${build_arch}, ${build_arch} must appear first in the list of universal_archs in ${prefix}/etc/macports/macports.conf"
            return -code error "incompatible universal_archs order"
        }
    }
    post-extract {
        # Answers to questions configure can't determine without running a program.
        copy ${filespath}/config.cache ${worksrcpath}
        # So it will find glib-genmarshal during configure before it has been built.
        touch ${worksrcpath}/gobject/glib-genmarshal
        file attributes ${worksrcpath}/gobject/glib-genmarshal -permissions +x
    }
}

post-patch {
    reinplace "s|data_dirs = \"/usr|data_dirs = \"${prefix}/share:/usr|g" ${worksrcpath}/glib/gutils.c
    reinplace "s|path = \"/bin|path = \"${prefix}/bin:/bin|g" ${worksrcpath}/glib/gutils.c ${worksrcpath}/glib/gspawn.c
    reinplace "s|@@PREFIX@@|${prefix}|g" ${worksrcpath}/gio/xdgmime/xdgmime.c
}

platform darwin {
    patchfiles-append \
        patch-child-test.c.diff
}

test.run                yes
test.target             check

post-destroot {
    file delete ${destroot}${prefix}/lib/charset.alias
}

platform darwin 6 {
    depends_lib-append lib:libdl:dlcompat
    post-configure {
        reinplace "s|#define HAVE_WCHAR_T 1|#undef HAVE_WCHAR_T|" \
            ${worksrcpath}/config.h
    }
}

platform darwin 9 {
    patchfiles-append patch-glib_gutils.h.diff
}

livecheck.check         regex
livecheck.url           http://ftp.gnome.org/pub/GNOME/sources/${my_name}/${branch}/?C=M&O=D
livecheck.regex         ${my_name}-(\[0-9.\]+)\\.tar
