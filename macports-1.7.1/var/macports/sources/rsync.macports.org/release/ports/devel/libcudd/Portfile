# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 39298 2008-08-16 19:44:43Z macsforever2000@macports.org $

PortSystem          1.0

name                libcudd
version             2.4.1
categories          devel
maintainers         bitchx.it:mij
description         An efficient library for manipulating decision diagrams
long_description    The CUDD package provides functions to manipulate Binary \
                    Decision Diagrams (BDDs), Algebraic Decision Diagrams (ADDs), \
                    and Zero-suppressed Binary Decision Diagrams (ZDDs). It's \
                    been written by Fabio Somenzi at the University of Colorado, \
                    Boulder.

homepage            http://vlsi.colorado.edu/~fabio/CUDD/
master_sites        ftp://vlsi.colorado.edu/pub/
distname            cudd-${version}
checksums           sha1 0a0894ff5a2798a73fcacf76d451777aa02919ce
platforms           darwin

# patch to:
# Makefile: avoid compiler flags that cause errors, add C++ interface target
patchfiles          patch-Makefile.diff patch-obj-cuddObj.cc.diff patch-obj-cuddObj.hh.diff patch-cudd-Makefile.diff patch-dddmp-Makefile.diff patch-epd-Makefile.diff patch-mtr-Makefile.diff patch-obj-Makefile.diff patch-st-Makefile.diff patch-util-Makefile.diff

use_configure       no
build.target        distclean
build.target-append build

post-build {
    # generate dylib for C interface
    exec /bin/sh -c "gcc -dynamiclib -O6 -headerpad_max_install_names -install_name ${prefix}/lib/cudd/libcudd.dylib -o ${worksrcpath}/libcudd.dylib `find ${worksrcpath}/cudd ${worksrcpath}/dddmp ${worksrcpath}/epd ${worksrcpath}/mtr ${worksrcpath}/st ${worksrcpath}/util -name '*.o'`"

    # compile the additional C++ interface
    exec /bin/sh -c "cd ${worksrcpath}/obj && make distclean && make 1>/dev/null 2>/dev/null"
    # generate dylib for C++ interface
    exec /bin/sh -c "g++ -dynamiclib -O6 -headerpad_max_install_names -install_name ${prefix}/lib/cudd/libcuddobj.dylib -L${worksrcpath} -lcudd -o ${worksrcpath}/libcuddobj.dylib ${worksrcpath}/obj/cuddObj.o"
}

destroot {
    # install header files
    xinstall -m 755 -d ${destroot}${prefix}/include/cudd
    xinstall -m 644 -W ${worksrcpath}/include cudd.h cuddInt.h cuddObj.hh \
                    dddmp.h epd.h mtr.h st.h util.h \
                ${destroot}${prefix}/include/cudd
    # install libraries
    xinstall -m 755 -d ${destroot}${prefix}/lib/cudd
    xinstall -m 644 -W ${worksrcpath} libcudd.dylib libcuddobj.dylib ${destroot}${prefix}/lib/cudd
    # TODO: install documentation ...
    # Print message on how to use the library
    ui_msg          "\n=============\nThe CUDD library for the Mac is compiled dynamically as per Apple's recommendations.\nTo compile against it, use:\n\t'-I${prefix}/cudd -L${prefix}/cudd -lcudd' for the C interface\n\t'-I${prefix}/cudd -L${prefix}/cudd -lcudd -lcuddobj' for the C++ interface.\n============="
}

