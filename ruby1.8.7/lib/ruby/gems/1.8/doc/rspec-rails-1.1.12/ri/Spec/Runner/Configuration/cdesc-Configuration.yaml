--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: TEST_CASE
  value: "ActiveSupport.const_defined?(:TestCase) ? ActiveSupport::TestCase : Test::Unit::TestCase"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Rails 1.2.3 does a copy of the @inheritable_attributes to the subclass when the subclass is created. This causes an ordering issue when setting state on Configuration because the data is already copied. Iterating over EXAMPLE_GROUP_CLASSES causes the base ExampleGroup classes to have their @inheritable_attributes updated. TODO: BT - When we no longer support Rails 1.2.3, we can remove this functionality"
  name: EXAMPLE_GROUP_CLASSES
  value: "[         TEST_CASE,         ::Spec::Rails::Example::RailsExampleGroup,         ::Spec::Rails::Example::FunctionalExampleGroup,         ::Spec::Rails::Example::ControllerExampleGroup,         ::Spec::Rails::Example::ViewExampleGroup,         ::Spec::Rails::Example::HelperExampleGroup,         ::Spec::Rails::Example::ModelExampleGroup"
full_name: Spec::Runner::Configuration
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: fixture_path
- !ruby/object:RI::MethodSummary 
  name: fixture_path=
- !ruby/object:RI::MethodSummary 
  name: global_fixtures
- !ruby/object:RI::MethodSummary 
  name: global_fixtures=
- !ruby/object:RI::MethodSummary 
  name: use_instantiated_fixtures
- !ruby/object:RI::MethodSummary 
  name: use_instantiated_fixtures=
- !ruby/object:RI::MethodSummary 
  name: use_transactional_fixtures
- !ruby/object:RI::MethodSummary 
  name: use_transactional_fixtures=
name: Configuration
superclass: Object
