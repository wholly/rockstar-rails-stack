--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Actions that fail to perform as expected throw exceptions. These exceptions can either be rescued for the public view (with a nice user-friendly explanation) or for the developers view (with tons of debugging information). The developers view is already implemented by the Action Controller, but the public view should be tailored to your specific application.
- !ruby/struct:SM::Flow::P 
  body: The default behavior for public exceptions is to render a static html file with the name of the error code thrown. If no such file exists, an empty response is sent with the correct status code.
- !ruby/struct:SM::Flow::P 
  body: You can override what constitutes a local request by overriding the <tt>local_request?</tt> method in your own controller. Custom rescue behavior is achieved by overriding the <tt>rescue_action_in_public</tt> and <tt>rescue_action_locally</tt> methods.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: LOCALHOST
  value: "'127.0.0.1'.freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: DEFAULT_RESCUE_RESPONSE
  value: ":internal_server_error"
- !ruby/object:RI::Constant 
  comment: 
  name: DEFAULT_RESCUE_RESPONSES
  value: "{       'ActionController::RoutingError'             => :not_found,       'ActionController::UnknownAction'            => :not_found,       'ActiveRecord::RecordNotFound'               => :not_found,       'ActiveRecord::StaleObjectError'             => :conflict,       'ActiveRecord::RecordInvalid'                => :unprocessable_entity,       'ActiveRecord::RecordNotSaved'               => :unprocessable_entity,       'ActionController::MethodNotAllowed'         => :method_not_allowed,       'ActionController::NotImplemented'           => :not_implemented,       'ActionController::InvalidAuthenticityToken' => :unprocessable_entity"
- !ruby/object:RI::Constant 
  comment: 
  name: DEFAULT_RESCUE_TEMPLATE
  value: "'diagnostics'"
- !ruby/object:RI::Constant 
  comment: 
  name: DEFAULT_RESCUE_TEMPLATES
  value: "{       'ActionView::MissingTemplate'       => 'missing_template',       'ActionController::RoutingError'    => 'routing_error',       'ActionController::UnknownAction'   => 'unknown_action',       'ActionView::TemplateError'         => 'template_error'"
- !ruby/object:RI::Constant 
  comment: 
  name: RESCUES_TEMPLATE_PATH
  value: ActionView::Template::EagerPath.new_and_loaded(       File.join(File.dirname(__FILE__), "templates"))
full_name: ActionController::Rescue
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: local_request?
- !ruby/object:RI::MethodSummary 
  name: log_error
- !ruby/object:RI::MethodSummary 
  name: render_optional_error_file
- !ruby/object:RI::MethodSummary 
  name: rescue_action
- !ruby/object:RI::MethodSummary 
  name: rescue_action_in_public
- !ruby/object:RI::MethodSummary 
  name: rescue_action_locally
- !ruby/object:RI::MethodSummary 
  name: rescue_action_without_handler
name: Rescue
superclass: 
