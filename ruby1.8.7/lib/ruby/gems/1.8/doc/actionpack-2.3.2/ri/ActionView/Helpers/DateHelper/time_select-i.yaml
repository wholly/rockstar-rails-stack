--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns a set of select tags (one for hour, minute and optionally second) pre-selected for accessing a specified time-based attribute (identified by <tt>method</tt>) on an object assigned to the template (identified by <tt>object</tt>). You can include the seconds with <tt>:include_seconds</tt>.
- !ruby/struct:SM::Flow::P 
  body: This method will also generate 3 input hidden tags, for the actual year, month and day unless the option <tt>:ignore_date</tt> is set to <tt>true</tt>.
- !ruby/struct:SM::Flow::P 
  body: If anything is passed in the html_options hash it will be applied to every select tag in the set.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::VERB 
  body: "  # Creates a time select tag that, when POSTed, will be stored in the post variable in the sunrise attribute\n  time_select(&quot;post&quot;, &quot;sunrise&quot;)\n\n  # Creates a time select tag that, when POSTed, will be stored in the order variable in the submitted\n  # attribute\n  time_select(&quot;order&quot;, &quot;submitted&quot;)\n\n  # Creates a time select tag that, when POSTed, will be stored in the mail variable in the sent_at attribute\n  time_select(&quot;mail&quot;, &quot;sent_at&quot;)\n\n  # Creates a time select tag with a seconds field that, when POSTed, will be stored in the post variables in\n  # the sunrise attribute.\n  time_select(&quot;post&quot;, &quot;start_time&quot;, :include_seconds =&gt; true)\n\n  # Creates a time select tag with a seconds field that, when POSTed, will be stored in the entry variables in\n  # the submission_time attribute.\n  time_select(&quot;entry&quot;, &quot;submission_time&quot;, :include_seconds =&gt; true)\n\n  # You can set the :minute_step to 15 which will give you: 00, 15, 30 and 45.\n  time_select 'game', 'game_time', {:minute_step =&gt; 15}\n\n  # Creates a time select tag with a custom prompt. Use :prompt =&gt; true for generic prompts.\n  time_select(&quot;post&quot;, &quot;written_on&quot;, :prompt =&gt; {:hour =&gt; 'Choose hour', :minute =&gt; 'Choose minute', :second =&gt; 'Choose seconds'})\n  time_select(&quot;post&quot;, &quot;written_on&quot;, :prompt =&gt; {:hour =&gt; true}) # generic prompt for hours\n  time_select(&quot;post&quot;, &quot;written_on&quot;, :prompt =&gt; true) # generic prompts for all\n"
- !ruby/struct:SM::Flow::P 
  body: The selects are prepared for multi-parameter assignment to an Active Record object.
- !ruby/struct:SM::Flow::P 
  body: "Note: If the day is not included as an option but the month is, the day will be set to the 1st to ensure that all month choices are valid."
full_name: ActionView::Helpers::DateHelper#time_select
is_singleton: false
name: time_select
params: (object_name, method, options = {}, html_options = {})
visibility: public
