--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns a set of html select-tags (one for year, month, day, hour, and minute) pre-selected with the <tt>datetime</tt>. It's also possible to explicitly set the order of the tags using the <tt>:order</tt> option with an array of symbols <tt>:year</tt>, <tt>:month</tt> and <tt>:day</tt> in the desired order. If you do not supply a Symbol, it will be appended onto the <tt>:order</tt> passed in. You can also add <tt>:date_separator</tt>, <tt>:datetime_separator</tt> and <tt>:time_separator</tt> keys to the <tt>options</tt> to control visual display of the elements.
- !ruby/struct:SM::Flow::P 
  body: If anything is passed in the html_options hash it will be applied to every select tag in the set.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::VERB 
  body: "  my_date_time = Time.now + 4.days\n\n  # Generates a datetime select that defaults to the datetime in my_date_time (four days after today)\n  select_datetime(my_date_time)\n\n  # Generates a datetime select that defaults to today (no specified datetime)\n  select_datetime()\n\n  # Generates a datetime select that defaults to the datetime in my_date_time (four days after today)\n  # with the fields ordered year, month, day rather than month, day, year.\n  select_datetime(my_date_time, :order =&gt; [:year, :month, :day])\n\n  # Generates a datetime select that defaults to the datetime in my_date_time (four days after today)\n  # with a '/' between each date field.\n  select_datetime(my_date_time, :date_separator =&gt; '/')\n\n  # Generates a datetime select that defaults to the datetime in my_date_time (four days after today)\n  # with a date fields separated by '/', time fields separated by '' and the date and time fields\n  # separated by a comma (',').\n  select_datetime(my_date_time, :date_separator =&gt; '/', :time_separator =&gt; '', :datetime_separator =&gt; ',')\n\n  # Generates a datetime select that discards the type of the field and defaults to the datetime in\n  # my_date_time (four days after today)\n  select_datetime(my_date_time, :discard_type =&gt; true)\n\n  # Generates a datetime select that defaults to the datetime in my_date_time (four days after today)\n  # prefixed with 'payday' rather than 'date'\n  select_datetime(my_date_time, :prefix =&gt; 'payday')\n\n  # Generates a datetime select with a custom prompt. Use :prompt=&gt;true for generic prompts.\n  select_datetime(my_date_time, :prompt =&gt; {:day =&gt; 'Choose day', :month =&gt; 'Choose month', :year =&gt; 'Choose year'})\n  select_datetime(my_date_time, :prompt =&gt; {:hour =&gt; true}) # generic prompt for hours\n  select_datetime(my_date_time, :prompt =&gt; true) # generic prompts for all\n"
full_name: ActionView::Helpers::DateHelper#select_datetime
is_singleton: false
name: select_datetime
params: (datetime = Time.current, options = {}, html_options = {})
visibility: public
