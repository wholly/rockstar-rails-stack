--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: lookup
- !ruby/object:RI::MethodSummary 
  name: lookup_by_extension
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: parse
- !ruby/object:RI::MethodSummary 
  name: register
- !ruby/object:RI::MethodSummary 
  name: register_alias
- !ruby/object:RI::MethodSummary 
  name: unverifiable_types
comment: 
- !ruby/struct:SM::Flow::P 
  body: "Encapsulates the notion of a mime type. Can be used at render time, for example, with:"
- !ruby/struct:SM::Flow::VERB 
  body: "  class PostsController &lt; ActionController::Base\n    def show\n      @post = Post.find(params[:id])\n\n      respond_to do |format|\n        format.html\n        format.ics { render :text =&gt; post.to_ics, :mime_type =&gt; Mime::Type[&quot;text/calendar&quot;]  }\n        format.xml { render :xml =&gt; @people.to_xml }\n      end\n    end\n  end\n"
constants: []

full_name: Mime::Type
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: ==
- !ruby/object:RI::MethodSummary 
  name: ===
- !ruby/object:RI::MethodSummary 
  name: =~
- !ruby/object:RI::MethodSummary 
  name: browser_generated?
- !ruby/object:RI::MethodSummary 
  name: html?
- !ruby/object:RI::MethodSummary 
  name: to_s
- !ruby/object:RI::MethodSummary 
  name: to_str
- !ruby/object:RI::MethodSummary 
  name: to_sym
- !ruby/object:RI::MethodSummary 
  name: verify_request?
name: Type
superclass: Object
