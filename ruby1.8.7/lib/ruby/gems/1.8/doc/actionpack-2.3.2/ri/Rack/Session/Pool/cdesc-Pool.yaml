--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: mutex
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  name: pool
  rw: R
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: Rack::Session::Pool provides simple cookie based session management. Session data is stored in a hash held by @pool. In the context of a multithreaded environment, sessions being committed to the pool is done in a merging manner.
- !ruby/struct:SM::Flow::P 
  body: The :drop option is available in rack.session.options if you with to explicitly remove the session from the session cache.
- !ruby/struct:SM::Flow::P 
  body: "Example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  myapp = MyRackApp.new\n  sessioned = Rack::Session::Pool.new(myapp,\n    :domain =&gt; 'foo.com',\n    :expire_after =&gt; 2592000\n  )\n  Rack::Handler::WEBrick.run sessioned\n"
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: DEFAULT_OPTIONS
  value: Abstract::ID::DEFAULT_OPTIONS.merge :drop => false
full_name: Rack::Session::Pool
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: generate_sid
- !ruby/object:RI::MethodSummary 
  name: get_session
- !ruby/object:RI::MethodSummary 
  name: set_session
name: Pool
superclass: Abstract::ID
