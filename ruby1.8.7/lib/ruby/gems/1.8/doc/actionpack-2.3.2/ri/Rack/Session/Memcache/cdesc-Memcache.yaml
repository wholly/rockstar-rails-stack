--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: mutex
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  name: pool
  rw: R
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: Rack::Session::Memcache provides simple cookie based session management. Session data is stored in memcached. The corresponding session key is maintained in the cookie. You may treat Session::Memcache as you would Session::Pool with the following caveats.
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: Setting :expire_after to 0 would note to the Memcache server to hang onto the session data until it would drop it according to it's own specifications. However, the cookie sent to the client would expire immediately.
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: Note that memcache does drop data before it may be listed to expire. For a full description of behaviour, please see memcache's documentation.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: DEFAULT_OPTIONS
  value: Abstract::ID::DEFAULT_OPTIONS.merge \         :namespace => 'rack:session',         :memcache_server => 'localhost:11211'
full_name: Rack::Session::Memcache
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: generate_sid
- !ruby/object:RI::MethodSummary 
  name: get_session
- !ruby/object:RI::MethodSummary 
  name: set_session
name: Memcache
superclass: Abstract::ID
