--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns a \clone of the resource that hasn't been assigned an <tt>id</tt> yet and is treated as a \new resource.
- !ruby/struct:SM::Flow::VERB 
  body: "  ryan = Person.find(1)\n  not_ryan = ryan.clone\n  not_ryan.new?  # =&gt; true\n"
- !ruby/struct:SM::Flow::P 
  body: Any active resource member attributes will NOT be cloned, though all other attributes are. This is to prevent the conflict between any <tt>prefix_options</tt> that refer to the original parent resource and the newly cloned parent resource that does not exist.
- !ruby/struct:SM::Flow::VERB 
  body: "  ryan = Person.find(1)\n  ryan.address = StreetAddress.find(1, :person_id =&gt; ryan.id)\n  ryan.hash = {:not =&gt; &quot;an ARes instance&quot;}\n\n  not_ryan = ryan.clone\n  not_ryan.new?            # =&gt; true\n  not_ryan.address         # =&gt; NoMethodError\n  not_ryan.hash            # =&gt; {:not =&gt; &quot;an ARes instance&quot;}\n"
full_name: ActiveResource::Base#clone
is_singleton: false
name: clone
params: ()
visibility: public
